diff -urN a/benchmark/parse/BUILD.bazel b/benchmark/parse/BUILD.bazel
--- a/benchmark/parse/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/benchmark/parse/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "parse",
+    srcs = ["parse.go"],
+    importpath = "golang.org/x/tools/benchmark/parse",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "parse_test",
+    srcs = ["parse_test.go"],
+    embed = [":parse"],
+)
diff -urN a/blog/BUILD.bazel b/blog/BUILD.bazel
--- a/blog/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/blog/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "blog",
+    srcs = ["blog.go"],
+    importpath = "golang.org/x/tools/blog",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//blog/atom",
+        "//present",
+    ],
+)
+
+go_test(
+    name = "blog_test",
+    srcs = ["blog_test.go"],
+    embed = [":blog"],
+)
diff -urN a/blog/atom/BUILD.bazel b/blog/atom/BUILD.bazel
--- a/blog/atom/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/blog/atom/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "atom",
+    srcs = ["atom.go"],
+    importpath = "golang.org/x/tools/blog/atom",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/auth/authtest/BUILD.bazel b/cmd/auth/authtest/BUILD.bazel
--- a/cmd/auth/authtest/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/auth/authtest/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "authtest_lib",
+    srcs = ["authtest.go"],
+    importpath = "golang.org/x/tools/cmd/auth/authtest",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "authtest",
+    embed = [":authtest_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/auth/cookieauth/BUILD.bazel b/cmd/auth/cookieauth/BUILD.bazel
--- a/cmd/auth/cookieauth/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/auth/cookieauth/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "cookieauth_lib",
+    srcs = ["cookieauth.go"],
+    importpath = "golang.org/x/tools/cmd/auth/cookieauth",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "cookieauth",
+    embed = [":cookieauth_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/auth/gitauth/BUILD.bazel b/cmd/auth/gitauth/BUILD.bazel
--- a/cmd/auth/gitauth/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/auth/gitauth/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "gitauth_lib",
+    srcs = ["gitauth.go"],
+    importpath = "golang.org/x/tools/cmd/auth/gitauth",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "gitauth",
+    embed = [":gitauth_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/auth/netrcauth/BUILD.bazel b/cmd/auth/netrcauth/BUILD.bazel
--- a/cmd/auth/netrcauth/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/auth/netrcauth/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "netrcauth_lib",
+    srcs = ["netrcauth.go"],
+    importpath = "golang.org/x/tools/cmd/auth/netrcauth",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "netrcauth",
+    embed = [":netrcauth_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/benchcmp/BUILD.bazel b/cmd/benchcmp/BUILD.bazel
--- a/cmd/benchcmp/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/benchcmp/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "benchcmp_lib",
+    srcs = [
+        "benchcmp.go",
+        "compare.go",
+        "doc.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/benchcmp",
+    visibility = ["//visibility:private"],
+    deps = ["//benchmark/parse"],
+)
+
+go_binary(
+    name = "benchcmp",
+    embed = [":benchcmp_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "benchcmp_test",
+    srcs = [
+        "benchcmp_test.go",
+        "compare_test.go",
+    ],
+    embed = [":benchcmp_lib"],
+    deps = ["//benchmark/parse"],
+)
diff -urN a/cmd/bundle/BUILD.bazel b/cmd/bundle/BUILD.bazel
--- a/cmd/bundle/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/bundle/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "bundle_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/bundle",
+    visibility = ["//visibility:private"],
+    deps = ["//go/loader"],
+)
+
+go_binary(
+    name = "bundle",
+    embed = [":bundle_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "bundle_test",
+    srcs = ["main_test.go"],
+    embed = [":bundle_lib"],
+    deps = ["//go/buildutil"],
+)
diff -urN a/cmd/bundle/testdata/src/domain.name/importdecl/BUILD.bazel b/cmd/bundle/testdata/src/domain.name/importdecl/BUILD.bazel
--- a/cmd/bundle/testdata/src/domain.name/importdecl/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/bundle/testdata/src/domain.name/importdecl/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "importdecl",
+    srcs = ["p.go"],
+    importpath = "golang.org/x/tools/cmd/bundle/testdata/src/domain.name/importdecl",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/bundle/testdata/src/initial/BUILD.bazel b/cmd/bundle/testdata/src/initial/BUILD.bazel
--- a/cmd/bundle/testdata/src/initial/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/bundle/testdata/src/initial/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "initial",
+    srcs = [
+        "a.go",
+        "b.go",
+        "c.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/bundle/testdata/src/initial",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/callgraph/BUILD.bazel b/cmd/callgraph/BUILD.bazel
--- a/cmd/callgraph/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/callgraph/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,31 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "callgraph_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/callgraph",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/buildutil",
+        "//go/callgraph",
+        "//go/callgraph/cha",
+        "//go/callgraph/rta",
+        "//go/callgraph/static",
+        "//go/packages",
+        "//go/pointer",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+    ],
+)
+
+go_binary(
+    name = "callgraph",
+    embed = [":callgraph_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "callgraph_test",
+    srcs = ["main_test.go"],
+    embed = [":callgraph_lib"],
+)
diff -urN a/cmd/callgraph/testdata/src/pkg/BUILD.bazel b/cmd/callgraph/testdata/src/pkg/BUILD.bazel
--- a/cmd/callgraph/testdata/src/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/callgraph/testdata/src/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "pkg_lib",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/cmd/callgraph/testdata/src/pkg",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "pkg",
+    embed = [":pkg_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "pkg_test",
+    srcs = ["pkg_test.go"],
+    embed = [":pkg_lib"],
+)
diff -urN a/cmd/compilebench/BUILD.bazel b/cmd/compilebench/BUILD.bazel
--- a/cmd/compilebench/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/compilebench/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "compilebench_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/compilebench",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "compilebench",
+    embed = [":compilebench_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/cover/BUILD.bazel b/cmd/cover/BUILD.bazel
--- a/cmd/cover/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/cover/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "cover_lib",
+    srcs = [
+        "cover.go",
+        "doc.go",
+        "func.go",
+        "html.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/cover",
+    visibility = ["//visibility:private"],
+    deps = ["//cover"],
+)
+
+go_binary(
+    name = "cover",
+    embed = [":cover_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "cover_test",
+    srcs = ["cover_test.go"],
+)
diff -urN a/cmd/cover/testdata/BUILD.bazel b/cmd/cover/testdata/BUILD.bazel
--- a/cmd/cover/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/cover/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "testdata_lib",
+    srcs = [
+        "main.go",
+        "test.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/cover/testdata",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "testdata",
+    embed = [":testdata_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/digraph/BUILD.bazel b/cmd/digraph/BUILD.bazel
--- a/cmd/digraph/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/digraph/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "digraph_lib",
+    srcs = ["digraph.go"],
+    importpath = "golang.org/x/tools/cmd/digraph",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "digraph",
+    embed = [":digraph_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "digraph_test",
+    srcs = ["digraph_test.go"],
+    embed = [":digraph_lib"],
+)
diff -urN a/cmd/eg/BUILD.bazel b/cmd/eg/BUILD.bazel
--- a/cmd/eg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/eg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "eg_lib",
+    srcs = ["eg.go"],
+    importpath = "golang.org/x/tools/cmd/eg",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/buildutil",
+        "//go/loader",
+        "//refactor/eg",
+    ],
+)
+
+go_binary(
+    name = "eg",
+    embed = [":eg_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/BUILD.bazel b/cmd/fiximports/BUILD.bazel
--- a/cmd/fiximports/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "fiximports_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "fiximports",
+    embed = [":fiximports_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "fiximports_test",
+    srcs = ["main_test.go"],
+    embed = [":fiximports_lib"],
+)
diff -urN a/cmd/fiximports/testdata/src/fruit.io/banana/BUILD.bazel b/cmd/fiximports/testdata/src/fruit.io/banana/BUILD.bazel
--- a/cmd/fiximports/testdata/src/fruit.io/banana/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/fruit.io/banana/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "banana",
+    srcs = ["banana.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/fruit.io/banana",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/fruit.io/orange/BUILD.bazel b/cmd/fiximports/testdata/src/fruit.io/orange/BUILD.bazel
--- a/cmd/fiximports/testdata/src/fruit.io/orange/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/fruit.io/orange/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "orange",
+    srcs = ["orange.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/fruit.io/orange",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/fruit.io/pear/BUILD.bazel b/cmd/fiximports/testdata/src/fruit.io/pear/BUILD.bazel
--- a/cmd/fiximports/testdata/src/fruit.io/pear/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/fruit.io/pear/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pear",
+    srcs = ["pear.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/fruit.io/pear",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/new.com/one/BUILD.bazel b/cmd/fiximports/testdata/src/new.com/one/BUILD.bazel
--- a/cmd/fiximports/testdata/src/new.com/one/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/new.com/one/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "one",
+    srcs = ["one.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/new.com/one",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/old.com/bad/BUILD.bazel b/cmd/fiximports/testdata/src/old.com/bad/BUILD.bazel
--- a/cmd/fiximports/testdata/src/old.com/bad/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/old.com/bad/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bad",
+    srcs = ["bad.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/old.com/bad",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/old.com/one/BUILD.bazel b/cmd/fiximports/testdata/src/old.com/one/BUILD.bazel
--- a/cmd/fiximports/testdata/src/old.com/one/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/old.com/one/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "one",
+    srcs = ["one.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/old.com/one",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/titanic.biz/bar/BUILD.bazel b/cmd/fiximports/testdata/src/titanic.biz/bar/BUILD.bazel
--- a/cmd/fiximports/testdata/src/titanic.biz/bar/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/titanic.biz/bar/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bar",
+    srcs = ["bar.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/titanic.biz/bar",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/fiximports/testdata/src/titanic.biz/foo/BUILD.bazel b/cmd/fiximports/testdata/src/titanic.biz/foo/BUILD.bazel
--- a/cmd/fiximports/testdata/src/titanic.biz/foo/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/fiximports/testdata/src/titanic.biz/foo/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "foo",
+    srcs = ["foo.go"],
+    importpath = "golang.org/x/tools/cmd/fiximports/testdata/src/titanic.biz/foo",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/getgo/BUILD.bazel b/cmd/getgo/BUILD.bazel
--- a/cmd/getgo/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/getgo/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "getgo_lib",
+    srcs = [
+        "download.go",
+        "main.go",
+        "path.go",
+        "steps.go",
+        "system.go",
+        "system_unix.go",
+        "system_windows.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/getgo",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "getgo",
+    embed = [":getgo_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "getgo_test",
+    srcs = [
+        "download_test.go",
+        "main_test.go",
+        "path_test.go",
+    ],
+    embed = [":getgo_lib"],
+)
diff -urN a/cmd/getgo/server/BUILD.bazel b/cmd/getgo/server/BUILD.bazel
--- a/cmd/getgo/server/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/getgo/server/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "server",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/getgo/server",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/go-contrib-init/BUILD.bazel b/cmd/go-contrib-init/BUILD.bazel
--- a/cmd/go-contrib-init/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/go-contrib-init/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,20 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "go-contrib-init_lib",
+    srcs = ["contrib.go"],
+    importpath = "golang.org/x/tools/cmd/go-contrib-init",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "go-contrib-init",
+    embed = [":go-contrib-init_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "go-contrib-init_test",
+    srcs = ["contrib_test.go"],
+    embed = [":go-contrib-init_lib"],
+)
diff -urN a/cmd/godex/BUILD.bazel b/cmd/godex/BUILD.bazel
--- a/cmd/godex/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/godex/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "godex_lib",
+    srcs = [
+        "doc.go",
+        "gc.go",
+        "gccgo.go",
+        "godex.go",
+        "isAlias18.go",
+        "isAlias19.go",
+        "print.go",
+        "source.go",
+        "writetype.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/godex",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "godex",
+    embed = [":godex_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/godoc/BUILD.bazel b/cmd/godoc/BUILD.bazel
--- a/cmd/godoc/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/godoc/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "godoc_lib",
+    srcs = [
+        "blog.go",
+        "codewalk.go",
+        "dl.go",
+        "doc.go",
+        "goroot.go",
+        "handlers.go",
+        "index.go",
+        "main.go",
+        "play.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/godoc",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//blog",
+        "//godoc",
+        "//godoc/analysis",
+        "//godoc/golangorgenv",
+        "//godoc/redirect",
+        "//godoc/static",
+        "//godoc/vfs",
+        "//godoc/vfs/gatefs",
+        "//godoc/vfs/mapfs",
+        "//godoc/vfs/zipfs",
+        "//playground",
+    ],
+)
+
+go_binary(
+    name = "godoc",
+    embed = [":godoc_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "godoc_test",
+    srcs = ["godoc_test.go"],
+)
diff -urN a/cmd/goimports/BUILD.bazel b/cmd/goimports/BUILD.bazel
--- a/cmd/goimports/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/goimports/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "goimports_lib",
+    srcs = [
+        "doc.go",
+        "goimports.go",
+        "goimports_gc.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/goimports",
+    visibility = ["//visibility:private"],
+    deps = ["//internal/imports"],
+)
+
+go_binary(
+    name = "goimports",
+    embed = [":goimports_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/gomvpkg/BUILD.bazel b/cmd/gomvpkg/BUILD.bazel
--- a/cmd/gomvpkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/gomvpkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "gomvpkg_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/gomvpkg",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/buildutil",
+        "//refactor/rename",
+    ],
+)
+
+go_binary(
+    name = "gomvpkg",
+    embed = [":gomvpkg_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/gopls/BUILD.bazel b/cmd/gopls/BUILD.bazel
--- a/cmd/gopls/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/gopls/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "gopls_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/gopls",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//internal/lsp/cmd",
+        "//internal/tool",
+    ],
+)
+
+go_binary(
+    name = "gopls",
+    embed = [":gopls_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/gorename/BUILD.bazel b/cmd/gorename/BUILD.bazel
--- a/cmd/gorename/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/gorename/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "gorename_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/gorename",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/buildutil",
+        "//refactor/rename",
+    ],
+)
+
+go_binary(
+    name = "gorename",
+    embed = [":gorename_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "gorename_test",
+    srcs = [
+        "cgo_test.go",
+        "gorename_test.go",
+    ],
+)
diff -urN a/cmd/gotype/BUILD.bazel b/cmd/gotype/BUILD.bazel
--- a/cmd/gotype/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/gotype/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "gotype_lib",
+    srcs = [
+        "gotype.go",
+        "sizesFor18.go",
+        "sizesFor19.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/gotype",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "gotype",
+    embed = [":gotype_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/goyacc/BUILD.bazel b/cmd/goyacc/BUILD.bazel
--- a/cmd/goyacc/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/goyacc/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "goyacc_lib",
+    srcs = [
+        "doc.go",
+        "yacc.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/goyacc",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "goyacc",
+    embed = [":goyacc_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/goyacc/testdata/expr/BUILD.bazel b/cmd/goyacc/testdata/expr/BUILD.bazel
--- a/cmd/goyacc/testdata/expr/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/goyacc/testdata/expr/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "expr_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/goyacc/testdata/expr",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "expr",
+    embed = [":expr_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/BUILD.bazel b/cmd/guru/BUILD.bazel
--- a/cmd/guru/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,55 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "guru_lib",
+    srcs = [
+        "callees.go",
+        "callers.go",
+        "callstack.go",
+        "definition.go",
+        "describe.go",
+        "freevars.go",
+        "guru.go",
+        "implements.go",
+        "isAlias18.go",
+        "isAlias19.go",
+        "main.go",
+        "peers.go",
+        "pointsto.go",
+        "pos.go",
+        "referrers.go",
+        "what.go",
+        "whicherrs.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/guru",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//cmd/guru/serial",
+        "//go/ast/astutil",
+        "//go/buildutil",
+        "//go/callgraph",
+        "//go/callgraph/static",
+        "//go/loader",
+        "//go/pointer",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+        "//go/types/typeutil",
+        "//imports",
+        "//refactor/importgraph",
+    ],
+)
+
+go_binary(
+    name = "guru",
+    embed = [":guru_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "guru_test",
+    srcs = [
+        "guru_test.go",
+        "unit_test.go",
+    ],
+    embed = [":guru_lib"],
+)
diff -urN a/cmd/guru/serial/BUILD.bazel b/cmd/guru/serial/BUILD.bazel
--- a/cmd/guru/serial/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/serial/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "serial",
+    srcs = ["serial.go"],
+    importpath = "golang.org/x/tools/cmd/guru/serial",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/alias/BUILD.bazel b/cmd/guru/testdata/src/alias/BUILD.bazel
--- a/cmd/guru/testdata/src/alias/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/alias/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "alias",
+    srcs = ["alias.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/alias",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/calls/BUILD.bazel b/cmd/guru/testdata/src/calls/BUILD.bazel
--- a/cmd/guru/testdata/src/calls/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/calls/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "calls_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/calls",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "calls",
+    embed = [":calls_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/calls-json/BUILD.bazel b/cmd/guru/testdata/src/calls-json/BUILD.bazel
--- a/cmd/guru/testdata/src/calls-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/calls-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "calls-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/calls-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "calls-json",
+    embed = [":calls-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/definition-json/BUILD.bazel b/cmd/guru/testdata/src/definition-json/BUILD.bazel
--- a/cmd/guru/testdata/src/definition-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/definition-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "definition-json",
+    srcs = [
+        "main.go",
+        "type.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/definition-json",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/describe/BUILD.bazel b/cmd/guru/testdata/src/describe/BUILD.bazel
--- a/cmd/guru/testdata/src/describe/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/describe/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "describe",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/describe",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/describe-json/BUILD.bazel b/cmd/guru/testdata/src/describe-json/BUILD.bazel
--- a/cmd/guru/testdata/src/describe-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/describe-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "describe-json",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/describe-json",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/freevars/BUILD.bazel b/cmd/guru/testdata/src/freevars/BUILD.bazel
--- a/cmd/guru/testdata/src/freevars/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/freevars/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "freevars_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/freevars",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "freevars",
+    embed = [":freevars_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/implements/BUILD.bazel b/cmd/guru/testdata/src/implements/BUILD.bazel
--- a/cmd/guru/testdata/src/implements/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/implements/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "implements_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/implements",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "implements",
+    embed = [":implements_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/implements-json/BUILD.bazel b/cmd/guru/testdata/src/implements-json/BUILD.bazel
--- a/cmd/guru/testdata/src/implements-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/implements-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "implements-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/implements-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "implements-json",
+    embed = [":implements-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/implements-methods/BUILD.bazel b/cmd/guru/testdata/src/implements-methods/BUILD.bazel
--- a/cmd/guru/testdata/src/implements-methods/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/implements-methods/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "implements-methods_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/implements-methods",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "implements-methods",
+    embed = [":implements-methods_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/implements-methods-json/BUILD.bazel b/cmd/guru/testdata/src/implements-methods-json/BUILD.bazel
--- a/cmd/guru/testdata/src/implements-methods-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/implements-methods-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "implements-methods-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/implements-methods-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "implements-methods-json",
+    embed = [":implements-methods-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/imports/BUILD.bazel b/cmd/guru/testdata/src/imports/BUILD.bazel
--- a/cmd/guru/testdata/src/imports/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/imports/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "imports_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/imports",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "imports",
+    embed = [":imports_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/lib/BUILD.bazel b/cmd/guru/testdata/src/lib/BUILD.bazel
--- a/cmd/guru/testdata/src/lib/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/lib/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "lib",
+    srcs = ["lib.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/lib",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/lib/sublib/BUILD.bazel b/cmd/guru/testdata/src/lib/sublib/BUILD.bazel
--- a/cmd/guru/testdata/src/lib/sublib/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/lib/sublib/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "sublib",
+    srcs = ["sublib.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/lib/sublib",
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/main/BUILD.bazel b/cmd/guru/testdata/src/main/BUILD.bazel
--- a/cmd/guru/testdata/src/main/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/main/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "main_lib",
+    srcs = ["multi.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/main",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "main",
+    embed = [":main_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/peers/BUILD.bazel b/cmd/guru/testdata/src/peers/BUILD.bazel
--- a/cmd/guru/testdata/src/peers/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/peers/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "peers_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/peers",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "peers",
+    embed = [":peers_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/peers-json/BUILD.bazel b/cmd/guru/testdata/src/peers-json/BUILD.bazel
--- a/cmd/guru/testdata/src/peers-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/peers-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "peers-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/peers-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "peers-json",
+    embed = [":peers-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/pointsto/BUILD.bazel b/cmd/guru/testdata/src/pointsto/BUILD.bazel
--- a/cmd/guru/testdata/src/pointsto/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/pointsto/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "pointsto_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/pointsto",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "pointsto",
+    embed = [":pointsto_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/pointsto-json/BUILD.bazel b/cmd/guru/testdata/src/pointsto-json/BUILD.bazel
--- a/cmd/guru/testdata/src/pointsto-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/pointsto-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "pointsto-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/pointsto-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "pointsto-json",
+    embed = [":pointsto-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/referrers/BUILD.bazel b/cmd/guru/testdata/src/referrers/BUILD.bazel
--- a/cmd/guru/testdata/src/referrers/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/referrers/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "referrers_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/referrers",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "referrers",
+    embed = [":referrers_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "referrers_test",
+    srcs = [
+        "ext_test.go",
+        "int_test.go",
+    ],
+    embed = [":referrers_lib"],
+)
diff -urN a/cmd/guru/testdata/src/referrers-json/BUILD.bazel b/cmd/guru/testdata/src/referrers-json/BUILD.bazel
--- a/cmd/guru/testdata/src/referrers-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/referrers-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "referrers-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/referrers-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "referrers-json",
+    embed = [":referrers-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/reflection/BUILD.bazel b/cmd/guru/testdata/src/reflection/BUILD.bazel
--- a/cmd/guru/testdata/src/reflection/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/reflection/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "reflection_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/reflection",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "reflection",
+    embed = [":reflection_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/softerrs/BUILD.bazel b/cmd/guru/testdata/src/softerrs/BUILD.bazel
--- a/cmd/guru/testdata/src/softerrs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/softerrs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "softerrs_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/softerrs",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "softerrs",
+    embed = [":softerrs_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/what/BUILD.bazel b/cmd/guru/testdata/src/what/BUILD.bazel
--- a/cmd/guru/testdata/src/what/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/what/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "what_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/what",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "what",
+    embed = [":what_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/what-json/BUILD.bazel b/cmd/guru/testdata/src/what-json/BUILD.bazel
--- a/cmd/guru/testdata/src/what-json/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/what-json/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "what-json_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/what-json",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "what-json",
+    embed = [":what-json_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/guru/testdata/src/whicherrs/BUILD.bazel b/cmd/guru/testdata/src/whicherrs/BUILD.bazel
--- a/cmd/guru/testdata/src/whicherrs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/guru/testdata/src/whicherrs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "whicherrs_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/guru/testdata/src/whicherrs",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "whicherrs",
+    embed = [":whicherrs_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/html2article/BUILD.bazel b/cmd/html2article/BUILD.bazel
--- a/cmd/html2article/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/html2article/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "html2article_lib",
+    srcs = ["conv.go"],
+    importpath = "golang.org/x/tools/cmd/html2article",
+    visibility = ["//visibility:private"],
+    deps = [
+        "@org_golang_x_net//html:go_default_library",
+        "@org_golang_x_net//html/atom:go_default_library",
+    ],
+)
+
+go_binary(
+    name = "html2article",
+    embed = [":html2article_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/present/BUILD.bazel b/cmd/present/BUILD.bazel
--- a/cmd/present/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/present/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "present_lib",
+    srcs = [
+        "dir.go",
+        "doc.go",
+        "main.go",
+        "play.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/present",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//godoc/static",
+        "//playground",
+        "//playground/socket",
+        "//present",
+    ],
+)
+
+go_binary(
+    name = "present",
+    embed = [":present_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/splitdwarf/BUILD.bazel b/cmd/splitdwarf/BUILD.bazel
--- a/cmd/splitdwarf/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/splitdwarf/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,50 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "splitdwarf_lib",
+    srcs = [
+        "doc.go",
+        "splitdwarf.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/splitdwarf",
+    visibility = ["//visibility:private"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:android": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//cmd/splitdwarf/internal/macho",
+        ],
+        "//conditions:default": [],
+    }),
+)
+
+go_binary(
+    name = "splitdwarf",
+    embed = [":splitdwarf_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/splitdwarf/internal/macho/BUILD.bazel b/cmd/splitdwarf/internal/macho/BUILD.bazel
--- a/cmd/splitdwarf/internal/macho/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/splitdwarf/internal/macho/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "macho",
+    srcs = [
+        "fat.go",
+        "file.go",
+        "macho.go",
+        "reloctype.go",
+        "reloctype_string.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/splitdwarf/internal/macho",
+    visibility = ["//cmd/splitdwarf:__subpackages__"],
+)
+
+go_test(
+    name = "macho_test",
+    srcs = ["file_test.go"],
+    data = glob(["testdata/**"]),
+    embed = [":macho"],
+)
diff -urN a/cmd/ssadump/BUILD.bazel b/cmd/ssadump/BUILD.bazel
--- a/cmd/ssadump/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/ssadump/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "ssadump_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/cmd/ssadump",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/buildutil",
+        "//go/packages",
+        "//go/ssa",
+        "//go/ssa/interp",
+        "//go/ssa/ssautil",
+    ],
+)
+
+go_binary(
+    name = "ssadump",
+    embed = [":ssadump_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/stress/BUILD.bazel b/cmd/stress/BUILD.bazel
--- a/cmd/stress/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/stress/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "stress_lib",
+    srcs = ["stress.go"],
+    importpath = "golang.org/x/tools/cmd/stress",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "stress",
+    embed = [":stress_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/stringer/BUILD.bazel b/cmd/stringer/BUILD.bazel
--- a/cmd/stringer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/stringer/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
+
+go_library(
+    name = "stringer_lib",
+    srcs = ["stringer.go"],
+    importpath = "golang.org/x/tools/cmd/stringer",
+    visibility = ["//visibility:private"],
+    deps = ["//go/packages"],
+)
+
+go_binary(
+    name = "stringer",
+    embed = [":stringer_lib"],
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "stringer_test",
+    srcs = [
+        "endtoend_test.go",
+        "golden_test.go",
+        "util_test.go",
+    ],
+    embed = [":stringer_lib"],
+)
diff -urN a/cmd/stringer/testdata/BUILD.bazel b/cmd/stringer/testdata/BUILD.bazel
--- a/cmd/stringer/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/stringer/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "testdata_lib",
+    srcs = [
+        "cgo.go",
+        "conv.go",
+        "day.go",
+        "gap.go",
+        "num.go",
+        "number.go",
+        "prime.go",
+        "tag_main.go",
+        "unum.go",
+        "unum2.go",
+        "vary_day.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/tools/cmd/stringer/testdata",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "testdata",
+    embed = [":testdata_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/cmd/toolstash/BUILD.bazel b/cmd/toolstash/BUILD.bazel
--- a/cmd/toolstash/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cmd/toolstash/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "toolstash_lib",
+    srcs = [
+        "cmp.go",
+        "main.go",
+    ],
+    importpath = "golang.org/x/tools/cmd/toolstash",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "toolstash",
+    embed = [":toolstash_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/container/intsets/BUILD.bazel b/container/intsets/BUILD.bazel
--- a/container/intsets/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/container/intsets/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "intsets",
+    srcs = [
+        "popcnt_amd64.go",
+        "popcnt_amd64.s",
+        "popcnt_generic.go",
+        "sparse.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/container/intsets",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "intsets_test",
+    srcs = [
+        "sparse_test.go",
+        "util_test.go",
+    ],
+    embed = [":intsets"],
+)
diff -urN a/cover/BUILD.bazel b/cover/BUILD.bazel
--- a/cover/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/cover/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cover",
+    srcs = ["profile.go"],
+    importpath = "golang.org/x/tools/cover",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/BUILD.bazel b/go/analysis/BUILD.bazel
--- a/go/analysis/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_tool_library")
+
+go_library(
+    name = "analysis",
+    srcs = [
+        "analysis.go",
+        "doc.go",
+        "validate.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis",
+    visibility = ["//visibility:public"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "analysis.go",
+        "doc.go",
+        "validate.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/analysistest/BUILD.bazel b/go/analysis/analysistest/BUILD.bazel
--- a/go/analysis/analysistest/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/analysistest/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "analysistest",
+    srcs = ["analysistest.go"],
+    importpath = "golang.org/x/tools/go/analysis/analysistest",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/internal/checker",
+        "//go/packages",
+    ],
+)
+
+go_test(
+    name = "analysistest_test",
+    srcs = ["analysistest_test.go"],
+    deps = [
+        ":analysistest",
+        "//go/analysis/passes/findcall",
+    ],
+)
diff -urN a/go/analysis/cmd/vet/BUILD.bazel b/go/analysis/cmd/vet/BUILD.bazel
--- a/go/analysis/cmd/vet/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/cmd/vet/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "vet_lib",
+    srcs = ["vet.go"],
+    importpath = "golang.org/x/tools/go/analysis/cmd/vet",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/analysis/multichecker",
+        "//go/analysis/passes/asmdecl",
+        "//go/analysis/passes/assign",
+        "//go/analysis/passes/atomic",
+        "//go/analysis/passes/atomicalign",
+        "//go/analysis/passes/bools",
+        "//go/analysis/passes/buildtag",
+        "//go/analysis/passes/cgocall",
+        "//go/analysis/passes/composite",
+        "//go/analysis/passes/copylock",
+        "//go/analysis/passes/errorsas",
+        "//go/analysis/passes/httpresponse",
+        "//go/analysis/passes/loopclosure",
+        "//go/analysis/passes/lostcancel",
+        "//go/analysis/passes/nilfunc",
+        "//go/analysis/passes/printf",
+        "//go/analysis/passes/shift",
+        "//go/analysis/passes/stdmethods",
+        "//go/analysis/passes/structtag",
+        "//go/analysis/passes/tests",
+        "//go/analysis/passes/unmarshal",
+        "//go/analysis/passes/unreachable",
+        "//go/analysis/passes/unsafeptr",
+        "//go/analysis/passes/unusedresult",
+    ],
+)
+
+go_binary(
+    name = "vet",
+    embed = [":vet_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/internal/analysisflags/BUILD.bazel b/go/analysis/internal/analysisflags/BUILD.bazel
--- a/go/analysis/internal/analysisflags/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/internal/analysisflags/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "analysisflags",
+    srcs = [
+        "flags.go",
+        "help.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/internal/analysisflags",
+    visibility = ["//go/analysis:__subpackages__"],
+    deps = ["//go/analysis"],
+)
+
+go_test(
+    name = "analysisflags_test",
+    srcs = ["flags_test.go"],
+    deps = [
+        ":analysisflags",
+        "//go/analysis",
+    ],
+)
diff -urN a/go/analysis/internal/checker/BUILD.bazel b/go/analysis/internal/checker/BUILD.bazel
--- a/go/analysis/internal/checker/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/internal/checker/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,13 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "checker",
+    srcs = ["checker.go"],
+    importpath = "golang.org/x/tools/go/analysis/internal/checker",
+    visibility = ["//go/analysis:__subpackages__"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/internal/analysisflags",
+        "//go/packages",
+    ],
+)
diff -urN a/go/analysis/internal/facts/BUILD.bazel b/go/analysis/internal/facts/BUILD.bazel
--- a/go/analysis/internal/facts/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/internal/facts/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,39 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "facts",
+    srcs = [
+        "facts.go",
+        "imports.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/internal/facts",
+    visibility = ["//go/analysis:__subpackages__"],
+    deps = [
+        "//go/analysis",
+        "//go/types/objectpath",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "facts.go",
+        "imports.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/internal/facts",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/types/objectpath:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "facts_test",
+    srcs = ["facts_test.go"],
+    deps = [
+        ":facts",
+        "//go/analysis/analysistest",
+        "//go/packages",
+    ],
+)
diff -urN a/go/analysis/multichecker/BUILD.bazel b/go/analysis/multichecker/BUILD.bazel
--- a/go/analysis/multichecker/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/multichecker/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "multichecker",
+    srcs = ["multichecker.go"],
+    importpath = "golang.org/x/tools/go/analysis/multichecker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/internal/analysisflags",
+        "//go/analysis/internal/checker",
+        "//go/analysis/unitchecker",
+    ],
+)
+
+go_test(
+    name = "multichecker_test",
+    srcs = ["multichecker_test.go"],
+    deps = [
+        ":multichecker",
+        "//go/analysis",
+        "//go/analysis/passes/findcall",
+    ],
+)
diff -urN a/go/analysis/passes/asmdecl/BUILD.bazel b/go/analysis/passes/asmdecl/BUILD.bazel
--- a/go/analysis/passes/asmdecl/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/asmdecl/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "asmdecl",
+    srcs = ["asmdecl.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/asmdecl",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/internal/analysisutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["asmdecl.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/asmdecl",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "asmdecl_test",
+    srcs = ["asmdecl_test.go"],
+    deps = [
+        ":asmdecl",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/asmdecl/testdata/src/a/BUILD.bazel b/go/analysis/passes/asmdecl/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/asmdecl/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/asmdecl/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = [
+        "asm.go",
+        "asm1.s",
+        "asm2.s",
+        "asm3.s",
+        "asm4.s",
+        "asm5.s",
+        "asm6.s",
+        "asm7.s",
+        "asm8.s",
+        "asm9.s",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/asmdecl/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/assign/BUILD.bazel b/go/analysis/passes/assign/BUILD.bazel
--- a/go/analysis/passes/assign/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/assign/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "assign",
+    srcs = ["assign.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/assign",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["assign.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/assign",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "assign_test",
+    srcs = ["assign_test.go"],
+    deps = [
+        ":assign",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/assign/testdata/src/a/BUILD.bazel b/go/analysis/passes/assign/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/assign/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/assign/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/assign/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/atomic/BUILD.bazel b/go/analysis/passes/atomic/BUILD.bazel
--- a/go/analysis/passes/atomic/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/atomic/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "atomic",
+    srcs = ["atomic.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomic",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["atomic.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomic",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "atomic_test",
+    srcs = ["atomic_test.go"],
+    deps = [
+        ":atomic",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/atomic/testdata/src/a/BUILD.bazel b/go/analysis/passes/atomic/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/atomic/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/atomic/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomic/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/atomicalign/BUILD.bazel b/go/analysis/passes/atomicalign/BUILD.bazel
--- a/go/analysis/passes/atomicalign/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/atomicalign/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "atomicalign",
+    srcs = ["atomicalign.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomicalign",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["atomicalign.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomicalign",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "atomicalign_test",
+    srcs = ["atomicalign_test.go"],
+    deps = [
+        ":atomicalign",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/atomicalign/testdata/src/a/BUILD.bazel b/go/analysis/passes/atomicalign/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/atomicalign/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/atomicalign/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = [
+        "a.go",
+        "stub.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomicalign/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/atomicalign/testdata/src/b/BUILD.bazel b/go/analysis/passes/atomicalign/testdata/src/b/BUILD.bazel
--- a/go/analysis/passes/atomicalign/testdata/src/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/atomicalign/testdata/src/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = [
+        "b.go",
+        "stub.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/atomicalign/testdata/src/b",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/bools/BUILD.bazel b/go/analysis/passes/bools/BUILD.bazel
--- a/go/analysis/passes/bools/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/bools/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "bools",
+    srcs = ["bools.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/bools",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["bools.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/bools",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "bools_test",
+    srcs = ["bools_test.go"],
+    deps = [
+        ":bools",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/bools/testdata/src/a/BUILD.bazel b/go/analysis/passes/bools/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/bools/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/bools/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/bools/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/buildssa/BUILD.bazel b/go/analysis/passes/buildssa/BUILD.bazel
--- a/go/analysis/passes/buildssa/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/buildssa/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "buildssa",
+    srcs = ["buildssa.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/buildssa",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/ssa",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["buildssa.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/buildssa",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/ssa:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "buildssa_test",
+    srcs = ["buildssa_test.go"],
+    deps = [
+        ":buildssa",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/buildssa/testdata/src/a/BUILD.bazel b/go/analysis/passes/buildssa/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/buildssa/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/buildssa/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/buildssa/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/buildtag/BUILD.bazel b/go/analysis/passes/buildtag/BUILD.bazel
--- a/go/analysis/passes/buildtag/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/buildtag/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "buildtag",
+    srcs = ["buildtag.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/buildtag",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/internal/analysisutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["buildtag.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/buildtag",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "buildtag_test",
+    srcs = ["buildtag_test.go"],
+    deps = [
+        ":buildtag",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/buildtag/testdata/src/a/BUILD.bazel b/go/analysis/passes/buildtag/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/buildtag/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/buildtag/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["buildtag.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/buildtag/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/cgocall/BUILD.bazel b/go/analysis/passes/cgocall/BUILD.bazel
--- a/go/analysis/passes/cgocall/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/cgocall/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "cgocall",
+    srcs = ["cgocall.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/cgocall",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/internal/analysisutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["cgocall.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/cgocall",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "cgocall_test",
+    srcs = ["cgocall_test.go"],
+    deps = [
+        ":cgocall",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/cgocall/testdata/src/a/BUILD.bazel b/go/analysis/passes/cgocall/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/cgocall/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/cgocall/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = [
+        "cgo.go",
+        "cgo3.go",
+    ],
+    cgo = True,
+    importpath = "golang.org/x/tools/go/analysis/passes/cgocall/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/cgocall/testdata/src/b/BUILD.bazel b/go/analysis/passes/cgocall/testdata/src/b/BUILD.bazel
--- a/go/analysis/passes/cgocall/testdata/src/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/cgocall/testdata/src/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = ["b.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/cgocall/testdata/src/b",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/cgocall/testdata/src/c/BUILD.bazel b/go/analysis/passes/cgocall/testdata/src/c/BUILD.bazel
--- a/go/analysis/passes/cgocall/testdata/src/c/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/cgocall/testdata/src/c/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "c",
+    srcs = ["c.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/cgocall/testdata/src/c",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/composite/BUILD.bazel b/go/analysis/passes/composite/BUILD.bazel
--- a/go/analysis/passes/composite/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/composite/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,40 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "composite",
+    srcs = [
+        "composite.go",
+        "whitelist.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/composite",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "composite.go",
+        "whitelist.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/composite",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "composite_test",
+    srcs = ["composite_test.go"],
+    deps = [
+        ":composite",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/composite/testdata/src/a/BUILD.bazel b/go/analysis/passes/composite/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/composite/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/composite/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/composite/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/copylock/BUILD.bazel b/go/analysis/passes/copylock/BUILD.bazel
--- a/go/analysis/passes/copylock/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/copylock/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "copylock",
+    srcs = ["copylock.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/copylock",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["copylock.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/copylock",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "copylock_test",
+    srcs = ["copylock_test.go"],
+    deps = [
+        ":copylock",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/copylock/testdata/src/a/BUILD.bazel b/go/analysis/passes/copylock/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/copylock/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/copylock/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = [
+        "copylock.go",
+        "copylock_func.go",
+        "copylock_range.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/copylock/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/ctrlflow/BUILD.bazel b/go/analysis/passes/ctrlflow/BUILD.bazel
--- a/go/analysis/passes/ctrlflow/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/ctrlflow/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "ctrlflow",
+    srcs = ["ctrlflow.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/ctrlflow",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+        "//go/cfg",
+        "//go/types/typeutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["ctrlflow.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/ctrlflow",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+        "//go/cfg:go_tool_library",
+        "//go/types/typeutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "ctrlflow_test",
+    srcs = ["ctrlflow_test.go"],
+    deps = [
+        ":ctrlflow",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/ctrlflow/testdata/src/a/BUILD.bazel b/go/analysis/passes/ctrlflow/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/ctrlflow/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/ctrlflow/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/ctrlflow/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/ctrlflow/testdata/src/lib/BUILD.bazel b/go/analysis/passes/ctrlflow/testdata/src/lib/BUILD.bazel
--- a/go/analysis/passes/ctrlflow/testdata/src/lib/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/ctrlflow/testdata/src/lib/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "lib",
+    srcs = ["lib.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/ctrlflow/testdata/src/lib",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/deepequalerrors/BUILD.bazel b/go/analysis/passes/deepequalerrors/BUILD.bazel
--- a/go/analysis/passes/deepequalerrors/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/deepequalerrors/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "deepequalerrors",
+    srcs = ["deepequalerrors.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/deepequalerrors",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+        "//go/types/typeutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["deepequalerrors.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/deepequalerrors",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+        "//go/types/typeutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "deepequalerrors_test",
+    srcs = ["deepequalerrors_test.go"],
+    deps = [
+        ":deepequalerrors",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/deepequalerrors/testdata/src/a/BUILD.bazel b/go/analysis/passes/deepequalerrors/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/deepequalerrors/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/deepequalerrors/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/deepequalerrors/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/errorsas/BUILD.bazel b/go/analysis/passes/errorsas/BUILD.bazel
--- a/go/analysis/passes/errorsas/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/errorsas/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "errorsas",
+    srcs = ["errorsas.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/errorsas",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+        "//go/types/typeutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["errorsas.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/errorsas",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+        "//go/types/typeutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "errorsas_test",
+    srcs = ["errorsas_test.go"],
+    deps = [
+        ":errorsas",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/errorsas/testdata/src/a/BUILD.bazel b/go/analysis/passes/errorsas/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/errorsas/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/errorsas/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/errorsas/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/findcall/BUILD.bazel b/go/analysis/passes/findcall/BUILD.bazel
--- a/go/analysis/passes/findcall/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/findcall/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "findcall",
+    srcs = ["findcall.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/findcall",
+    visibility = ["//visibility:public"],
+    deps = ["//go/analysis"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["findcall.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/findcall",
+    visibility = ["//visibility:public"],
+    deps = ["//go/analysis:go_tool_library"],
+)
+
+go_test(
+    name = "findcall_test",
+    srcs = ["findcall_test.go"],
+    deps = [
+        ":findcall",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/findcall/cmd/findcall/BUILD.bazel b/go/analysis/passes/findcall/cmd/findcall/BUILD.bazel
--- a/go/analysis/passes/findcall/cmd/findcall/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/findcall/cmd/findcall/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "findcall_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/findcall/cmd/findcall",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/analysis/passes/findcall",
+        "//go/analysis/singlechecker",
+    ],
+)
+
+go_binary(
+    name = "findcall",
+    embed = [":findcall_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/findcall/testdata/src/a/BUILD.bazel b/go/analysis/passes/findcall/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/findcall/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/findcall/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "a_lib",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/findcall/testdata/src/a",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "a",
+    embed = [":a_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/httpresponse/BUILD.bazel b/go/analysis/passes/httpresponse/BUILD.bazel
--- a/go/analysis/passes/httpresponse/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/httpresponse/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "httpresponse",
+    srcs = ["httpresponse.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/httpresponse",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["httpresponse.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/httpresponse",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "httpresponse_test",
+    srcs = ["httpresponse_test.go"],
+    deps = [
+        ":httpresponse",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/httpresponse/testdata/src/a/BUILD.bazel b/go/analysis/passes/httpresponse/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/httpresponse/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/httpresponse/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/httpresponse/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/inspect/BUILD.bazel b/go/analysis/passes/inspect/BUILD.bazel
--- a/go/analysis/passes/inspect/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/inspect/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_tool_library")
+
+go_library(
+    name = "inspect",
+    srcs = ["inspect.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/inspect",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["inspect.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/inspect",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
diff -urN a/go/analysis/passes/internal/analysisutil/BUILD.bazel b/go/analysis/passes/internal/analysisutil/BUILD.bazel
--- a/go/analysis/passes/internal/analysisutil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/internal/analysisutil/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_tool_library")
+
+go_library(
+    name = "analysisutil",
+    srcs = ["util.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/internal/analysisutil",
+    visibility = ["//go/analysis/passes:__subpackages__"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["util.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/internal/analysisutil",
+    visibility = ["//go/analysis/passes:__subpackages__"],
+)
diff -urN a/go/analysis/passes/loopclosure/BUILD.bazel b/go/analysis/passes/loopclosure/BUILD.bazel
--- a/go/analysis/passes/loopclosure/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/loopclosure/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "loopclosure",
+    srcs = ["loopclosure.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/loopclosure",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["loopclosure.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/loopclosure",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "loopclosure_test",
+    srcs = ["loopclosure_test.go"],
+    deps = [
+        ":loopclosure",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/loopclosure/testdata/src/a/BUILD.bazel b/go/analysis/passes/loopclosure/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/loopclosure/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/loopclosure/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/loopclosure/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/lostcancel/BUILD.bazel b/go/analysis/passes/lostcancel/BUILD.bazel
--- a/go/analysis/passes/lostcancel/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/lostcancel/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "lostcancel",
+    srcs = ["lostcancel.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/lostcancel",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/ctrlflow",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+        "//go/cfg",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["lostcancel.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/lostcancel",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/ctrlflow:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+        "//go/cfg:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "lostcancel_test",
+    srcs = ["lostcancel_test.go"],
+    deps = [
+        ":lostcancel",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/lostcancel/cmd/lostcancel/BUILD.bazel b/go/analysis/passes/lostcancel/cmd/lostcancel/BUILD.bazel
--- a/go/analysis/passes/lostcancel/cmd/lostcancel/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/lostcancel/cmd/lostcancel/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "lostcancel_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/lostcancel/cmd/lostcancel",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/analysis/passes/lostcancel",
+        "//go/analysis/singlechecker",
+    ],
+)
+
+go_binary(
+    name = "lostcancel",
+    embed = [":lostcancel_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/lostcancel/testdata/src/a/BUILD.bazel b/go/analysis/passes/lostcancel/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/lostcancel/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/lostcancel/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/lostcancel/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/lostcancel/testdata/src/b/BUILD.bazel b/go/analysis/passes/lostcancel/testdata/src/b/BUILD.bazel
--- a/go/analysis/passes/lostcancel/testdata/src/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/lostcancel/testdata/src/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "b_lib",
+    srcs = ["b.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/lostcancel/testdata/src/b",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "b",
+    embed = [":b_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/nilfunc/BUILD.bazel b/go/analysis/passes/nilfunc/BUILD.bazel
--- a/go/analysis/passes/nilfunc/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/nilfunc/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "nilfunc",
+    srcs = ["nilfunc.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilfunc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["nilfunc.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilfunc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "nilfunc_test",
+    srcs = ["nilfunc_test.go"],
+    deps = [
+        ":nilfunc",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/nilfunc/testdata/src/a/BUILD.bazel b/go/analysis/passes/nilfunc/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/nilfunc/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/nilfunc/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilfunc/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/nilness/BUILD.bazel b/go/analysis/passes/nilness/BUILD.bazel
--- a/go/analysis/passes/nilness/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/nilness/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "nilness",
+    srcs = ["nilness.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilness",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/buildssa",
+        "//go/ssa",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["nilness.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilness",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/buildssa:go_tool_library",
+        "//go/ssa:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "nilness_test",
+    srcs = ["nilness_test.go"],
+    deps = [
+        ":nilness",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/nilness/cmd/nilness/BUILD.bazel b/go/analysis/passes/nilness/cmd/nilness/BUILD.bazel
--- a/go/analysis/passes/nilness/cmd/nilness/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/nilness/cmd/nilness/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "nilness_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilness/cmd/nilness",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/analysis/passes/nilness",
+        "//go/analysis/singlechecker",
+    ],
+)
+
+go_binary(
+    name = "nilness",
+    embed = [":nilness_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/nilness/testdata/src/a/BUILD.bazel b/go/analysis/passes/nilness/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/nilness/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/nilness/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/nilness/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/pkgfact/BUILD.bazel b/go/analysis/passes/pkgfact/BUILD.bazel
--- a/go/analysis/passes/pkgfact/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/pkgfact/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "pkgfact",
+    srcs = ["pkgfact.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/pkgfact",
+    visibility = ["//visibility:public"],
+    deps = ["//go/analysis"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["pkgfact.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/pkgfact",
+    visibility = ["//visibility:public"],
+    deps = ["//go/analysis:go_tool_library"],
+)
+
+go_test(
+    name = "pkgfact_test",
+    srcs = ["pkgfact_test.go"],
+    deps = [
+        ":pkgfact",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/pkgfact/testdata/src/a/BUILD.bazel b/go/analysis/passes/pkgfact/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/pkgfact/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/pkgfact/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/pkgfact/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/pkgfact/testdata/src/b/BUILD.bazel b/go/analysis/passes/pkgfact/testdata/src/b/BUILD.bazel
--- a/go/analysis/passes/pkgfact/testdata/src/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/pkgfact/testdata/src/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = ["b.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/pkgfact/testdata/src/b",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/pkgfact/testdata/src/c/BUILD.bazel b/go/analysis/passes/pkgfact/testdata/src/c/BUILD.bazel
--- a/go/analysis/passes/pkgfact/testdata/src/c/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/pkgfact/testdata/src/c/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "c",
+    srcs = ["c.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/pkgfact/testdata/src/c",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/printf/BUILD.bazel b/go/analysis/passes/printf/BUILD.bazel
--- a/go/analysis/passes/printf/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/printf/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,44 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "printf",
+    srcs = [
+        "printf.go",
+        "types.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/printf",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+        "//go/types/typeutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "printf.go",
+        "types.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/printf",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+        "//go/types/typeutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "printf_test",
+    srcs = ["printf_test.go"],
+    deps = [
+        ":printf",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/printf/testdata/src/a/BUILD.bazel b/go/analysis/passes/printf/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/printf/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/printf/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/printf/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/printf/testdata/src/b/BUILD.bazel b/go/analysis/passes/printf/testdata/src/b/BUILD.bazel
--- a/go/analysis/passes/printf/testdata/src/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/printf/testdata/src/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = ["b.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/printf/testdata/src/b",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/printf/testdata/src/nofmt/BUILD.bazel b/go/analysis/passes/printf/testdata/src/nofmt/BUILD.bazel
--- a/go/analysis/passes/printf/testdata/src/nofmt/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/printf/testdata/src/nofmt/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nofmt",
+    srcs = ["nofmt.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/printf/testdata/src/nofmt",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/shadow/BUILD.bazel b/go/analysis/passes/shadow/BUILD.bazel
--- a/go/analysis/passes/shadow/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/shadow/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "shadow",
+    srcs = ["shadow.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/shadow",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["shadow.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/shadow",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "shadow_test",
+    srcs = ["shadow_test.go"],
+    deps = [
+        ":shadow",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/shadow/cmd/shadow/BUILD.bazel b/go/analysis/passes/shadow/cmd/shadow/BUILD.bazel
--- a/go/analysis/passes/shadow/cmd/shadow/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/shadow/cmd/shadow/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "shadow_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/analysis/passes/shadow",
+        "//go/analysis/singlechecker",
+    ],
+)
+
+go_binary(
+    name = "shadow",
+    embed = [":shadow_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/shadow/testdata/src/a/BUILD.bazel b/go/analysis/passes/shadow/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/shadow/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/shadow/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/shadow/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/shift/BUILD.bazel b/go/analysis/passes/shift/BUILD.bazel
--- a/go/analysis/passes/shift/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/shift/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,42 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "shift",
+    srcs = [
+        "dead.go",
+        "shift.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/shift",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "dead.go",
+        "shift.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/passes/shift",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "shift_test",
+    srcs = ["shift_test.go"],
+    deps = [
+        ":shift",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/shift/testdata/src/a/BUILD.bazel b/go/analysis/passes/shift/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/shift/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/shift/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/shift/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/stdmethods/BUILD.bazel b/go/analysis/passes/stdmethods/BUILD.bazel
--- a/go/analysis/passes/stdmethods/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/stdmethods/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "stdmethods",
+    srcs = ["stdmethods.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/stdmethods",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["stdmethods.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/stdmethods",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "stdmethods_test",
+    srcs = ["stdmethods_test.go"],
+    deps = [
+        ":stdmethods",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/stdmethods/testdata/src/a/BUILD.bazel b/go/analysis/passes/stdmethods/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/stdmethods/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/stdmethods/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/stdmethods/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/structtag/BUILD.bazel b/go/analysis/passes/structtag/BUILD.bazel
--- a/go/analysis/passes/structtag/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/structtag/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "structtag",
+    srcs = ["structtag.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/structtag",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["structtag.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/structtag",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "structtag_test",
+    srcs = ["structtag_test.go"],
+    deps = [
+        ":structtag",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/structtag/testdata/src/a/BUILD.bazel b/go/analysis/passes/structtag/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/structtag/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/structtag/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/structtag/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/structtag/testdata/src/a/b/BUILD.bazel b/go/analysis/passes/structtag/testdata/src/a/b/BUILD.bazel
--- a/go/analysis/passes/structtag/testdata/src/a/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/structtag/testdata/src/a/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = ["b.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/structtag/testdata/src/a/b",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/tests/BUILD.bazel b/go/analysis/passes/tests/BUILD.bazel
--- a/go/analysis/passes/tests/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/tests/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "tests",
+    srcs = ["tests.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/tests",
+    visibility = ["//visibility:public"],
+    deps = ["//go/analysis"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["tests.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/tests",
+    visibility = ["//visibility:public"],
+    deps = ["//go/analysis:go_tool_library"],
+)
+
+go_test(
+    name = "tests_test",
+    srcs = ["tests_test.go"],
+    deps = [
+        ":tests",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/tests/testdata/src/a/BUILD.bazel b/go/analysis/passes/tests/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/tests/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/tests/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/tests/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "a_test",
+    srcs = [
+        "a_test.go",
+        "ax_test.go",
+    ],
+    embed = [":a"],
+)
diff -urN a/go/analysis/passes/tests/testdata/src/b/BUILD.bazel b/go/analysis/passes/tests/testdata/src/b/BUILD.bazel
--- a/go/analysis/passes/tests/testdata/src/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/tests/testdata/src/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = ["b.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/tests/testdata/src/b",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/tests/testdata/src/b_x_test/BUILD.bazel b/go/analysis/passes/tests/testdata/src/b_x_test/BUILD.bazel
--- a/go/analysis/passes/tests/testdata/src/b_x_test/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/tests/testdata/src/b_x_test/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,6 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "b_x_test_test",
+    srcs = ["b_test.go"],
+)
diff -urN a/go/analysis/passes/tests/testdata/src/divergent/BUILD.bazel b/go/analysis/passes/tests/testdata/src/divergent/BUILD.bazel
--- a/go/analysis/passes/tests/testdata/src/divergent/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/tests/testdata/src/divergent/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "divergent",
+    srcs = ["buf.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/tests/testdata/src/divergent",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "divergent_test",
+    srcs = ["buf_test.go"],
+    embed = [":divergent"],
+)
diff -urN a/go/analysis/passes/unmarshal/BUILD.bazel b/go/analysis/passes/unmarshal/BUILD.bazel
--- a/go/analysis/passes/unmarshal/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unmarshal/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "unmarshal",
+    srcs = ["unmarshal.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unmarshal",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+        "//go/types/typeutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["unmarshal.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unmarshal",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+        "//go/types/typeutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "unmarshal_test",
+    srcs = ["unmarshal_test.go"],
+    deps = [
+        ":unmarshal",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/unmarshal/cmd/unmarshal/BUILD.bazel b/go/analysis/passes/unmarshal/cmd/unmarshal/BUILD.bazel
--- a/go/analysis/passes/unmarshal/cmd/unmarshal/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unmarshal/cmd/unmarshal/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "unmarshal_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unmarshal/cmd/unmarshal",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/analysis/passes/unmarshal",
+        "//go/analysis/singlechecker",
+    ],
+)
+
+go_binary(
+    name = "unmarshal",
+    embed = [":unmarshal_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/unmarshal/testdata/src/a/BUILD.bazel b/go/analysis/passes/unmarshal/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/unmarshal/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unmarshal/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unmarshal/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/unreachable/BUILD.bazel b/go/analysis/passes/unreachable/BUILD.bazel
--- a/go/analysis/passes/unreachable/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unreachable/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "unreachable",
+    srcs = ["unreachable.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unreachable",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["unreachable.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unreachable",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "unreachable_test",
+    srcs = ["unreachable_test.go"],
+    deps = [
+        ":unreachable",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/unreachable/testdata/src/a/BUILD.bazel b/go/analysis/passes/unreachable/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/unreachable/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unreachable/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unreachable/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/unsafeptr/BUILD.bazel b/go/analysis/passes/unsafeptr/BUILD.bazel
--- a/go/analysis/passes/unsafeptr/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unsafeptr/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,34 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "unsafeptr",
+    srcs = ["unsafeptr.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unsafeptr",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["unsafeptr.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unsafeptr",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "unsafeptr_test",
+    srcs = ["unsafeptr_test.go"],
+    deps = [
+        ":unsafeptr",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/unsafeptr/testdata/src/a/BUILD.bazel b/go/analysis/passes/unsafeptr/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/unsafeptr/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unsafeptr/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unsafeptr/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/passes/unusedresult/BUILD.bazel b/go/analysis/passes/unusedresult/BUILD.bazel
--- a/go/analysis/passes/unusedresult/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unusedresult/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "unusedresult",
+    srcs = ["unusedresult.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unusedresult",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/inspect",
+        "//go/analysis/passes/internal/analysisutil",
+        "//go/ast/inspector",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["unusedresult.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unusedresult",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis:go_tool_library",
+        "//go/analysis/passes/inspect:go_tool_library",
+        "//go/analysis/passes/internal/analysisutil:go_tool_library",
+        "//go/ast/inspector:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "unusedresult_test",
+    srcs = ["unusedresult_test.go"],
+    deps = [
+        ":unusedresult",
+        "//go/analysis/analysistest",
+    ],
+)
diff -urN a/go/analysis/passes/unusedresult/testdata/src/a/BUILD.bazel b/go/analysis/passes/unusedresult/testdata/src/a/BUILD.bazel
--- a/go/analysis/passes/unusedresult/testdata/src/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/passes/unusedresult/testdata/src/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = ["a.go"],
+    importpath = "golang.org/x/tools/go/analysis/passes/unusedresult/testdata/src/a",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/analysis/singlechecker/BUILD.bazel b/go/analysis/singlechecker/BUILD.bazel
--- a/go/analysis/singlechecker/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/singlechecker/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "singlechecker",
+    srcs = ["singlechecker.go"],
+    importpath = "golang.org/x/tools/go/analysis/singlechecker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/internal/analysisflags",
+        "//go/analysis/internal/checker",
+        "//go/analysis/unitchecker",
+    ],
+)
diff -urN a/go/analysis/unitchecker/BUILD.bazel b/go/analysis/unitchecker/BUILD.bazel
--- a/go/analysis/unitchecker/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/analysis/unitchecker/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "unitchecker",
+    srcs = [
+        "unitchecker.go",
+        "unitchecker112.go",
+    ],
+    importpath = "golang.org/x/tools/go/analysis/unitchecker",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/internal/analysisflags",
+        "//go/analysis/internal/facts",
+    ],
+)
+
+go_test(
+    name = "unitchecker_test",
+    srcs = ["unitchecker_test.go"],
+    deps = [
+        ":unitchecker",
+        "//go/analysis/passes/findcall",
+        "//go/analysis/passes/printf",
+        "//go/packages/packagestest",
+    ],
+)
diff -urN a/go/ast/astutil/BUILD.bazel b/go/ast/astutil/BUILD.bazel
--- a/go/ast/astutil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ast/astutil/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,35 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "astutil",
+    srcs = [
+        "enclosing.go",
+        "imports.go",
+        "rewrite.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/go/ast/astutil",
+    visibility = ["//visibility:public"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "enclosing.go",
+        "imports.go",
+        "rewrite.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/go/ast/astutil",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "astutil_test",
+    srcs = [
+        "enclosing_test.go",
+        "imports_test.go",
+        "rewrite_test.go",
+    ],
+    embed = [":astutil"],
+)
diff -urN a/go/ast/inspector/BUILD.bazel b/go/ast/inspector/BUILD.bazel
--- a/go/ast/inspector/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ast/inspector/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "inspector",
+    srcs = [
+        "inspector.go",
+        "typeof.go",
+    ],
+    importpath = "golang.org/x/tools/go/ast/inspector",
+    visibility = ["//visibility:public"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "inspector.go",
+        "typeof.go",
+    ],
+    importpath = "golang.org/x/tools/go/ast/inspector",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "inspector_test",
+    srcs = ["inspector_test.go"],
+    deps = [":inspector"],
+)
diff -urN a/go/buildutil/BUILD.bazel b/go/buildutil/BUILD.bazel
--- a/go/buildutil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/buildutil/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "buildutil",
+    srcs = [
+        "allpackages.go",
+        "fakecontext.go",
+        "overlay.go",
+        "tags.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/go/buildutil",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "buildutil_test",
+    srcs = [
+        "allpackages_test.go",
+        "overlay_test.go",
+        "tags_test.go",
+        "util_test.go",
+        "util_windows_test.go",
+    ],
+    deps = [
+        ":buildutil",
+        "//go/packages/packagestest",
+    ],
+)
diff -urN a/go/callgraph/BUILD.bazel b/go/callgraph/BUILD.bazel
--- a/go/callgraph/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/callgraph/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "callgraph",
+    srcs = [
+        "callgraph.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/go/callgraph",
+    visibility = ["//visibility:public"],
+    deps = ["//go/ssa"],
+)
diff -urN a/go/callgraph/cha/BUILD.bazel b/go/callgraph/cha/BUILD.bazel
--- a/go/callgraph/cha/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/callgraph/cha/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,100 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cha",
+    srcs = ["cha.go"],
+    importpath = "golang.org/x/tools/go/callgraph/cha",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/callgraph",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+        "//go/types/typeutil",
+    ],
+)
+
+go_test(
+    name = "cha_test",
+    srcs = ["cha_test.go"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            ":cha",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa/ssautil",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/go/callgraph/cha/testdata/BUILD.bazel b/go/callgraph/cha/testdata/BUILD.bazel
--- a/go/callgraph/cha/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/callgraph/cha/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "testdata_lib",
+    srcs = ["issue23925.go"],
+    importpath = "golang.org/x/tools/go/callgraph/cha/testdata",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "testdata",
+    embed = [":testdata_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/callgraph/rta/BUILD.bazel b/go/callgraph/rta/BUILD.bazel
--- a/go/callgraph/rta/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/callgraph/rta/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,113 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "rta",
+    srcs = ["rta.go"],
+    importpath = "golang.org/x/tools/go/callgraph/rta",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/callgraph",
+        "//go/ssa",
+        "//go/types/typeutil",
+    ],
+)
+
+go_test(
+    name = "rta_test",
+    srcs = ["rta_test.go"],
+    data = glob(["testdata/**"]),
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            ":rta",
+            "//go/callgraph",
+            "//go/loader",
+            "//go/ssa",
+            "//go/ssa/ssautil",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/go/callgraph/static/BUILD.bazel b/go/callgraph/static/BUILD.bazel
--- a/go/callgraph/static/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/callgraph/static/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,24 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "static",
+    srcs = ["static.go"],
+    importpath = "golang.org/x/tools/go/callgraph/static",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/callgraph",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+    ],
+)
+
+go_test(
+    name = "static_test",
+    srcs = ["static_test.go"],
+    deps = [
+        ":static",
+        "//go/callgraph",
+        "//go/loader",
+        "//go/ssa/ssautil",
+    ],
+)
diff -urN a/go/cfg/BUILD.bazel b/go/cfg/BUILD.bazel
--- a/go/cfg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/cfg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "cfg",
+    srcs = [
+        "builder.go",
+        "cfg.go",
+    ],
+    importpath = "golang.org/x/tools/go/cfg",
+    visibility = ["//visibility:public"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "builder.go",
+        "cfg.go",
+    ],
+    importpath = "golang.org/x/tools/go/cfg",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "cfg_test",
+    srcs = ["cfg_test.go"],
+    embed = [":cfg"],
+)
diff -urN a/go/expect/BUILD.bazel b/go/expect/BUILD.bazel
--- a/go/expect/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/expect/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "expect",
+    srcs = [
+        "expect.go",
+        "extract.go",
+    ],
+    importpath = "golang.org/x/tools/go/expect",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "expect_test",
+    srcs = ["expect_test.go"],
+    deps = [":expect"],
+)
diff -urN a/go/expect/testdata/BUILD.bazel b/go/expect/testdata/BUILD.bazel
--- a/go/expect/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/expect/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testdata",
+    srcs = ["test.go"],
+    importpath = "golang.org/x/tools/go/expect/testdata",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/gccgoexportdata/BUILD.bazel b/go/gccgoexportdata/BUILD.bazel
--- a/go/gccgoexportdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/gccgoexportdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "gccgoexportdata",
+    srcs = ["gccgoexportdata.go"],
+    importpath = "golang.org/x/tools/go/gccgoexportdata",
+    visibility = ["//visibility:public"],
+    deps = ["//go/internal/gccgoimporter"],
+)
+
+go_test(
+    name = "gccgoexportdata_test",
+    srcs = ["gccgoexportdata_test.go"],
+    data = glob(["testdata/**"]),
+    deps = [":gccgoexportdata"],
+)
diff -urN a/go/gcexportdata/BUILD.bazel b/go/gcexportdata/BUILD.bazel
--- a/go/gcexportdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/gcexportdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,33 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "gcexportdata",
+    srcs = [
+        "gcexportdata.go",
+        "importer.go",
+    ],
+    importpath = "golang.org/x/tools/go/gcexportdata",
+    visibility = ["//visibility:public"],
+    deps = ["//go/internal/gcimporter"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "gcexportdata.go",
+        "importer.go",
+    ],
+    importpath = "golang.org/x/tools/go/gcexportdata",
+    visibility = ["//visibility:public"],
+    deps = ["//go/internal/gcimporter:go_tool_library"],
+)
+
+go_test(
+    name = "gcexportdata_test",
+    srcs = [
+        "example_test.go",
+        "gcexportdata_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    deps = [":gcexportdata"],
+)
diff -urN a/go/internal/cgo/BUILD.bazel b/go/internal/cgo/BUILD.bazel
--- a/go/internal/cgo/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/internal/cgo/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cgo",
+    srcs = [
+        "cgo.go",
+        "cgo_pkgconfig.go",
+    ],
+    importpath = "golang.org/x/tools/go/internal/cgo",
+    visibility = ["//go:__subpackages__"],
+)
diff -urN a/go/internal/gccgoimporter/BUILD.bazel b/go/internal/gccgoimporter/BUILD.bazel
--- a/go/internal/gccgoimporter/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/internal/gccgoimporter/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,28 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "gccgoimporter",
+    srcs = [
+        "ar.go",
+        "backdoor.go",
+        "gccgoinstallation.go",
+        "importer.go",
+        "newInterface10.go",
+        "newInterface11.go",
+        "parser.go",
+    ],
+    importpath = "golang.org/x/tools/go/internal/gccgoimporter",
+    visibility = ["//go:__subpackages__"],
+)
+
+go_test(
+    name = "gccgoimporter_test",
+    srcs = [
+        "gccgoinstallation_test.go",
+        "importer_test.go",
+        "parser_test.go",
+        "testenv_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":gccgoimporter"],
+)
diff -urN a/go/internal/gcimporter/BUILD.bazel b/go/internal/gcimporter/BUILD.bazel
--- a/go/internal/gcimporter/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/internal/gcimporter/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,48 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "gcimporter",
+    srcs = [
+        "bexport.go",
+        "bimport.go",
+        "exportdata.go",
+        "gcimporter.go",
+        "iexport.go",
+        "iimport.go",
+        "newInterface10.go",
+        "newInterface11.go",
+    ],
+    importpath = "golang.org/x/tools/go/internal/gcimporter",
+    visibility = ["//go:__subpackages__"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "bexport.go",
+        "bimport.go",
+        "exportdata.go",
+        "gcimporter.go",
+        "iexport.go",
+        "iimport.go",
+        "newInterface10.go",
+        "newInterface11.go",
+    ],
+    importpath = "golang.org/x/tools/go/internal/gcimporter",
+    visibility = ["//go:__subpackages__"],
+)
+
+go_test(
+    name = "gcimporter_test",
+    srcs = [
+        "bexport_test.go",
+        "gcimporter11_test.go",
+        "gcimporter_test.go",
+        "iexport_test.go",
+    ],
+    embed = [":gcimporter"],
+    deps = [
+        "//go/buildutil",
+        "//go/loader",
+    ],
+)
diff -urN a/go/internal/gcimporter/testdata/versions/BUILD.bazel b/go/internal/gcimporter/testdata/versions/BUILD.bazel
--- a/go/internal/gcimporter/testdata/versions/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/internal/gcimporter/testdata/versions/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "versions",
+    srcs = ["test.go"],
+    importpath = "golang.org/x/tools/go/internal/gcimporter/testdata/versions",
+    visibility = ["//go:__subpackages__"],
+)
diff -urN a/go/internal/packagesdriver/BUILD.bazel b/go/internal/packagesdriver/BUILD.bazel
--- a/go/internal/packagesdriver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/internal/packagesdriver/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "packagesdriver",
+    srcs = ["sizes.go"],
+    importpath = "golang.org/x/tools/go/internal/packagesdriver",
+    visibility = ["//go:__subpackages__"],
+)
diff -urN a/go/loader/BUILD.bazel b/go/loader/BUILD.bazel
--- a/go/loader/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/loader/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "loader",
+    srcs = [
+        "doc.go",
+        "loader.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/go/loader",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/ast/astutil",
+        "//go/buildutil",
+        "//go/internal/cgo",
+    ],
+)
+
+go_test(
+    name = "loader_test",
+    srcs = [
+        "example_test.go",
+        "loader_test.go",
+        "stdlib_test.go",
+    ],
+    deps = [
+        ":loader",
+        "//go/buildutil",
+    ],
+)
diff -urN a/go/loader/testdata/BUILD.bazel b/go/loader/testdata/BUILD.bazel
--- a/go/loader/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/loader/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testdata",
+    srcs = [
+        "a.go",
+        "b.go",
+        "badpkgdecl.go",
+    ],
+    importpath = "golang.org/x/tools/go/loader/testdata",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/BUILD.bazel b/go/packages/BUILD.bazel
--- a/go/packages/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "packages",
+    srcs = [
+        "doc.go",
+        "external.go",
+        "golist.go",
+        "golist_overlay.go",
+        "packages.go",
+        "visit.go",
+    ],
+    importpath = "golang.org/x/tools/go/packages",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/gcexportdata",
+        "//go/internal/packagesdriver",
+        "//internal/gopathwalk",
+        "//internal/semver",
+    ],
+)
+
+go_test(
+    name = "packages_test",
+    srcs = [
+        "example_test.go",
+        "packages110_test.go",
+        "packages_test.go",
+        "packagescgo_test.go",
+        "stdlib_test.go",
+    ],
+    deps = [
+        ":packages",
+        "//go/packages/packagestest",
+    ],
+)
diff -urN a/go/packages/gopackages/BUILD.bazel b/go/packages/gopackages/BUILD.bazel
--- a/go/packages/gopackages/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/gopackages/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "gopackages_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/go/packages/gopackages",
+    visibility = ["//visibility:private"],
+    deps = [
+        "//go/packages",
+        "//go/types/typeutil",
+        "//internal/tool",
+    ],
+)
+
+go_binary(
+    name = "gopackages",
+    embed = [":gopackages_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/packagestest/BUILD.bazel b/go/packages/packagestest/BUILD.bazel
--- a/go/packages/packagestest/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/packagestest/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,36 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "packagestest",
+    srcs = [
+        "expect.go",
+        "export.go",
+        "gopath.go",
+        "modules.go",
+        "modules_111.go",
+        "modules_112.go",
+        "modules_113.go",
+    ],
+    importpath = "golang.org/x/tools/go/packages/packagestest",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/expect",
+        "//go/packages",
+        "//internal/span",
+    ],
+)
+
+go_test(
+    name = "packagestest_test",
+    srcs = [
+        "expect_test.go",
+        "export_test.go",
+        "gopath_test.go",
+        "modules_test.go",
+    ],
+    deps = [
+        ":packagestest",
+        "//go/expect",
+        "//internal/span",
+    ],
+)
diff -urN a/go/packages/packagestest/testdata/BUILD.bazel b/go/packages/packagestest/testdata/BUILD.bazel
--- a/go/packages/packagestest/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/packagestest/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testdata",
+    srcs = ["test.go"],
+    importpath = "golang.org/x/tools/go/packages/packagestest/testdata",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.0/pkg/BUILD.bazel b/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.0/pkg/BUILD.bazel
--- a/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.0/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.0/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkg",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.0/pkg",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel b/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel
--- a/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkg",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/go/packages/testdata/TestName_Modules/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/testdata/TestName_Modules/src/b/pkg/BUILD.bazel b/go/packages/testdata/TestName_Modules/src/b/pkg/BUILD.bazel
--- a/go/packages/testdata/TestName_Modules/src/b/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/testdata/TestName_Modules/src/b/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkg",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/go/packages/testdata/TestName_Modules/src/b/pkg",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.1/pkg/BUILD.bazel b/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.1/pkg/BUILD.bazel
--- a/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.1/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.1/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkg",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.1/pkg",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.2/pkg/BUILD.bazel b/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.2/pkg/BUILD.bazel
--- a/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.2/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.2/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkg",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo/v2@v2.0.2/pkg",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel b/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel
--- a/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "pkg",
+    srcs = ["pkg.go"],
+    importpath = "golang.org/x/tools/go/packages/testdata/TestName_ModulesDedup/pkg/mod/github.com/heschik/tools-testrepo@v1.0.0/pkg",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/pointer/BUILD.bazel b/go/pointer/BUILD.bazel
--- a/go/pointer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/pointer/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,101 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "pointer",
+    srcs = [
+        "analysis.go",
+        "api.go",
+        "callgraph.go",
+        "constraint.go",
+        "doc.go",
+        "gen.go",
+        "hvn.go",
+        "intrinsics.go",
+        "labels.go",
+        "opt.go",
+        "print.go",
+        "query.go",
+        "reflect.go",
+        "solve.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/go/pointer",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//container/intsets",
+        "//go/callgraph",
+        "//go/ssa",
+        "//go/types/typeutil",
+    ],
+)
+
+go_test(
+    name = "pointer_test",
+    srcs = [
+        "example_test.go",
+        "pointer_test.go",
+        "query_test.go",
+        "stdlib_test.go",
+    ],
+    embed = [":pointer"],
+    deps = [
+        "//go/callgraph",
+        "//go/loader",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//go/buildutil",
+            "//go/types/typeutil",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/go/pointer/testdata/BUILD.bazel b/go/pointer/testdata/BUILD.bazel
--- a/go/pointer/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/pointer/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "testdata_lib",
+    srcs = [
+        "finalizer.go",
+        "issue9002.go",
+        "rtti.go",
+    ],
+    importpath = "golang.org/x/tools/go/pointer/testdata",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "testdata",
+    embed = [":testdata_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/BUILD.bazel b/go/ssa/BUILD.bazel
--- a/go/ssa/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,129 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "ssa",
+    srcs = [
+        "blockopt.go",
+        "builder.go",
+        "const.go",
+        "create.go",
+        "doc.go",
+        "dom.go",
+        "emit.go",
+        "func.go",
+        "identical.go",
+        "identical_17.go",
+        "lift.go",
+        "lvalue.go",
+        "methods.go",
+        "mode.go",
+        "print.go",
+        "sanity.go",
+        "source.go",
+        "ssa.go",
+        "testmain.go",
+        "util.go",
+        "wrappers.go",
+    ],
+    importpath = "golang.org/x/tools/go/ssa",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/ast/astutil",
+        "//go/types/typeutil",
+    ],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "blockopt.go",
+        "builder.go",
+        "const.go",
+        "create.go",
+        "doc.go",
+        "dom.go",
+        "emit.go",
+        "func.go",
+        "identical.go",
+        "identical_17.go",
+        "lift.go",
+        "lvalue.go",
+        "methods.go",
+        "mode.go",
+        "print.go",
+        "sanity.go",
+        "source.go",
+        "ssa.go",
+        "testmain.go",
+        "util.go",
+        "wrappers.go",
+    ],
+    importpath = "golang.org/x/tools/go/ssa",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/ast/astutil:go_tool_library",
+        "//go/types/typeutil:go_tool_library",
+    ],
+)
+
+go_test(
+    name = "ssa_test",
+    srcs = [
+        "builder_test.go",
+        "example_test.go",
+        "identical_test.go",
+        "source_test.go",
+        "stdlib_test.go",
+        "testmain_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    deps = [
+        ":ssa",
+        "//go/ast/astutil",
+        "//go/expect",
+        "//go/loader",
+        "//go/packages",
+        "//go/ssa/ssautil",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//go/buildutil",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//go/buildutil",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/go/ssa/interp/BUILD.bazel b/go/ssa/interp/BUILD.bazel
--- a/go/ssa/interp/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "interp",
+    srcs = [
+        "external.go",
+        "interp.go",
+        "map.go",
+        "ops.go",
+        "reflect.go",
+        "value.go",
+    ],
+    importpath = "golang.org/x/tools/go/ssa/interp",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/ssa",
+        "//go/types/typeutil",
+    ],
+)
+
+go_test(
+    name = "interp_test",
+    srcs = ["interp_test.go"],
+    deps = [
+        ":interp",
+        "//go/loader",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+    ],
+)
diff -urN a/go/ssa/interp/testdata/BUILD.bazel b/go/ssa/interp/testdata/BUILD.bazel
--- a/go/ssa/interp/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,29 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "testdata_lib",
+    srcs = [
+        "boundmeth.go",
+        "complit.go",
+        "coverage.go",
+        "defer.go",
+        "fieldprom.go",
+        "ifaceconv.go",
+        "ifaceprom.go",
+        "initorder.go",
+        "methprom.go",
+        "mrvchain.go",
+        "range.go",
+        "recover.go",
+        "reflect.go",
+        "static.go",
+    ],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "testdata",
+    embed = [":testdata_lib"],
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/errors/BUILD.bazel b/go/ssa/interp/testdata/src/errors/BUILD.bazel
--- a/go/ssa/interp/testdata/src/errors/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/errors/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errors",
+    srcs = ["errors.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/errors",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/fmt/BUILD.bazel b/go/ssa/interp/testdata/src/fmt/BUILD.bazel
--- a/go/ssa/interp/testdata/src/fmt/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/fmt/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "fmt",
+    srcs = ["fmt.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/fmt",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/math/BUILD.bazel b/go/ssa/interp/testdata/src/math/BUILD.bazel
--- a/go/ssa/interp/testdata/src/math/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/math/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "math",
+    srcs = ["math.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/math",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/os/BUILD.bazel b/go/ssa/interp/testdata/src/os/BUILD.bazel
--- a/go/ssa/interp/testdata/src/os/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/os/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "os",
+    srcs = ["os.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/os",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/reflect/BUILD.bazel b/go/ssa/interp/testdata/src/reflect/BUILD.bazel
--- a/go/ssa/interp/testdata/src/reflect/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/reflect/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "reflect",
+    srcs = ["reflect.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/reflect",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/runtime/BUILD.bazel b/go/ssa/interp/testdata/src/runtime/BUILD.bazel
--- a/go/ssa/interp/testdata/src/runtime/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/runtime/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "runtime",
+    srcs = ["runtime.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/runtime",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/strings/BUILD.bazel b/go/ssa/interp/testdata/src/strings/BUILD.bazel
--- a/go/ssa/interp/testdata/src/strings/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/strings/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "strings",
+    srcs = ["strings.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/strings",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/time/BUILD.bazel b/go/ssa/interp/testdata/src/time/BUILD.bazel
--- a/go/ssa/interp/testdata/src/time/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/time/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "time",
+    srcs = ["time.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/time",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/unicode/utf8/BUILD.bazel b/go/ssa/interp/testdata/src/unicode/utf8/BUILD.bazel
--- a/go/ssa/interp/testdata/src/unicode/utf8/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/unicode/utf8/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "utf8",
+    srcs = ["utf8.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/unicode/utf8",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/interp/testdata/src/unsafe/BUILD.bazel b/go/ssa/interp/testdata/src/unsafe/BUILD.bazel
--- a/go/ssa/interp/testdata/src/unsafe/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/interp/testdata/src/unsafe/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "unsafe",
+    srcs = ["unsafe.go"],
+    importpath = "golang.org/x/tools/go/ssa/interp/testdata/src/unsafe",
+    visibility = ["//visibility:public"],
+)
diff -urN a/go/ssa/ssautil/BUILD.bazel b/go/ssa/ssautil/BUILD.bazel
--- a/go/ssa/ssautil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/ssa/ssautil/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,84 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "ssautil",
+    srcs = [
+        "load.go",
+        "switch.go",
+        "visit.go",
+    ],
+    importpath = "golang.org/x/tools/go/ssa/ssautil",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/loader",
+        "//go/packages",
+        "//go/ssa",
+    ],
+)
+
+go_test(
+    name = "ssautil_test",
+    srcs = [
+        "load_test.go",
+        "switch_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    deps = [
+        ":ssautil",
+        "//go/packages",
+    ] + select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            "//go/loader",
+            "//go/ssa",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/go/types/objectpath/BUILD.bazel b/go/types/objectpath/BUILD.bazel
--- a/go/types/objectpath/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/types/objectpath/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,26 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "objectpath",
+    srcs = ["objectpath.go"],
+    importpath = "golang.org/x/tools/go/types/objectpath",
+    visibility = ["//visibility:public"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = ["objectpath.go"],
+    importpath = "golang.org/x/tools/go/types/objectpath",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "objectpath_test",
+    srcs = ["objectpath_test.go"],
+    deps = [
+        ":objectpath",
+        "//go/buildutil",
+        "//go/gcexportdata",
+        "//go/loader",
+    ],
+)
diff -urN a/go/types/typeutil/BUILD.bazel b/go/types/typeutil/BUILD.bazel
--- a/go/types/typeutil/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/types/typeutil/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,41 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test", "go_tool_library")
+
+go_library(
+    name = "typeutil",
+    srcs = [
+        "callee.go",
+        "imports.go",
+        "map.go",
+        "methodsetcache.go",
+        "ui.go",
+    ],
+    importpath = "golang.org/x/tools/go/types/typeutil",
+    visibility = ["//visibility:public"],
+    deps = ["//go/ast/astutil"],
+)
+
+go_tool_library(
+    name = "go_tool_library",
+    srcs = [
+        "callee.go",
+        "imports.go",
+        "map.go",
+        "methodsetcache.go",
+        "ui.go",
+    ],
+    importpath = "golang.org/x/tools/go/types/typeutil",
+    visibility = ["//visibility:public"],
+    deps = ["//go/ast/astutil:go_tool_library"],
+)
+
+go_test(
+    name = "typeutil_test",
+    srcs = [
+        "callee_test.go",
+        "example_test.go",
+        "imports_test.go",
+        "map_test.go",
+        "ui_test.go",
+    ],
+    deps = [":typeutil"],
+)
diff -urN a/go/vcs/BUILD.bazel b/go/vcs/BUILD.bazel
--- a/go/vcs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/go/vcs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "vcs",
+    srcs = [
+        "discovery.go",
+        "env.go",
+        "http.go",
+        "vcs.go",
+    ],
+    importpath = "golang.org/x/tools/go/vcs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "vcs_test",
+    srcs = ["vcs_test.go"],
+    embed = [":vcs"],
+)
diff -urN a/godoc/BUILD.bazel b/godoc/BUILD.bazel
--- a/godoc/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,53 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "godoc",
+    srcs = [
+        "corpus.go",
+        "dirtrees.go",
+        "format.go",
+        "godoc.go",
+        "index.go",
+        "linkify.go",
+        "meta.go",
+        "page.go",
+        "parser.go",
+        "pres.go",
+        "search.go",
+        "server.go",
+        "snippet.go",
+        "spec.go",
+        "spot.go",
+        "tab.go",
+        "template.go",
+        "versions.go",
+    ],
+    importpath = "golang.org/x/tools/godoc",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//godoc/analysis",
+        "//godoc/golangorgenv",
+        "//godoc/util",
+        "//godoc/vfs",
+        "//godoc/vfs/httpfs",
+    ],
+)
+
+go_test(
+    name = "godoc_test",
+    srcs = [
+        "dirtrees_test.go",
+        "godoc17_test.go",
+        "godoc_test.go",
+        "index_test.go",
+        "server_test.go",
+        "spec_test.go",
+        "versions_test.go",
+    ],
+    embed = [":godoc"],
+    deps = [
+        "//godoc/vfs",
+        "//godoc/vfs/gatefs",
+        "//godoc/vfs/mapfs",
+    ],
+)
diff -urN a/godoc/analysis/BUILD.bazel b/godoc/analysis/BUILD.bazel
--- a/godoc/analysis/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/analysis/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,23 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "analysis",
+    srcs = [
+        "analysis.go",
+        "callgraph.go",
+        "implements.go",
+        "json.go",
+        "peers.go",
+        "typeinfo.go",
+    ],
+    importpath = "golang.org/x/tools/godoc/analysis",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/callgraph",
+        "//go/loader",
+        "//go/pointer",
+        "//go/ssa",
+        "//go/ssa/ssautil",
+        "//go/types/typeutil",
+    ],
+)
diff -urN a/godoc/golangorgenv/BUILD.bazel b/godoc/golangorgenv/BUILD.bazel
--- a/godoc/golangorgenv/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/golangorgenv/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "golangorgenv",
+    srcs = ["golangorgenv.go"],
+    importpath = "golang.org/x/tools/godoc/golangorgenv",
+    visibility = ["//visibility:public"],
+)
diff -urN a/godoc/redirect/BUILD.bazel b/godoc/redirect/BUILD.bazel
--- a/godoc/redirect/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/redirect/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "redirect",
+    srcs = [
+        "hash.go",
+        "redirect.go",
+        "rietveld.go",
+    ],
+    importpath = "golang.org/x/tools/godoc/redirect",
+    visibility = ["//visibility:public"],
+    deps = ["@org_golang_x_net//context/ctxhttp:go_default_library"],
+)
+
+go_test(
+    name = "redirect_test",
+    srcs = ["redirect_test.go"],
+    embed = [":redirect"],
+)
diff -urN a/godoc/static/BUILD.bazel b/godoc/static/BUILD.bazel
--- a/godoc/static/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/static/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "static",
+    srcs = [
+        "doc.go",
+        "gen.go",
+        "static.go",
+    ],
+    importpath = "golang.org/x/tools/godoc/static",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "static_test",
+    srcs = ["gen_test.go"],
+    embed = [":static"],
+)
diff -urN a/godoc/util/BUILD.bazel b/godoc/util/BUILD.bazel
--- a/godoc/util/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/util/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "util",
+    srcs = [
+        "throttle.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/godoc/util",
+    visibility = ["//visibility:public"],
+    deps = ["//godoc/vfs"],
+)
diff -urN a/godoc/vfs/BUILD.bazel b/godoc/vfs/BUILD.bazel
--- a/godoc/vfs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/vfs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "vfs",
+    srcs = [
+        "emptyvfs.go",
+        "namespace.go",
+        "os.go",
+        "vfs.go",
+    ],
+    importpath = "golang.org/x/tools/godoc/vfs",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "vfs_test",
+    srcs = [
+        "emptyvfs_test.go",
+        "os_test.go",
+    ],
+    deps = [
+        ":vfs",
+        "//godoc/vfs/mapfs",
+    ],
+)
diff -urN a/godoc/vfs/gatefs/BUILD.bazel b/godoc/vfs/gatefs/BUILD.bazel
--- a/godoc/vfs/gatefs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/vfs/gatefs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,18 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "gatefs",
+    srcs = ["gatefs.go"],
+    importpath = "golang.org/x/tools/godoc/vfs/gatefs",
+    visibility = ["//visibility:public"],
+    deps = ["//godoc/vfs"],
+)
+
+go_test(
+    name = "gatefs_test",
+    srcs = ["gatefs_test.go"],
+    deps = [
+        ":gatefs",
+        "//godoc/vfs",
+    ],
+)
diff -urN a/godoc/vfs/httpfs/BUILD.bazel b/godoc/vfs/httpfs/BUILD.bazel
--- a/godoc/vfs/httpfs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/vfs/httpfs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "httpfs",
+    srcs = ["httpfs.go"],
+    importpath = "golang.org/x/tools/godoc/vfs/httpfs",
+    visibility = ["//visibility:public"],
+    deps = ["//godoc/vfs"],
+)
diff -urN a/godoc/vfs/mapfs/BUILD.bazel b/godoc/vfs/mapfs/BUILD.bazel
--- a/godoc/vfs/mapfs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/vfs/mapfs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "mapfs",
+    srcs = ["mapfs.go"],
+    importpath = "golang.org/x/tools/godoc/vfs/mapfs",
+    visibility = ["//visibility:public"],
+    deps = ["//godoc/vfs"],
+)
+
+go_test(
+    name = "mapfs_test",
+    srcs = ["mapfs_test.go"],
+    embed = [":mapfs"],
+)
diff -urN a/godoc/vfs/zipfs/BUILD.bazel b/godoc/vfs/zipfs/BUILD.bazel
--- a/godoc/vfs/zipfs/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/godoc/vfs/zipfs/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,16 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "zipfs",
+    srcs = ["zipfs.go"],
+    importpath = "golang.org/x/tools/godoc/vfs/zipfs",
+    visibility = ["//visibility:public"],
+    deps = ["//godoc/vfs"],
+)
+
+go_test(
+    name = "zipfs_test",
+    srcs = ["zipfs_test.go"],
+    embed = [":zipfs"],
+    deps = ["//godoc/vfs"],
+)
diff -urN a/imports/BUILD.bazel b/imports/BUILD.bazel
--- a/imports/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/imports/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "imports",
+    srcs = ["forward.go"],
+    importpath = "golang.org/x/tools/imports",
+    visibility = ["//visibility:public"],
+    deps = ["//internal/imports"],
+)
diff -urN a/internal/apidiff/BUILD.bazel b/internal/apidiff/BUILD.bazel
--- a/internal/apidiff/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/apidiff/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,21 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "apidiff",
+    srcs = [
+        "apidiff.go",
+        "compatibility.go",
+        "correspondence.go",
+        "messageset.go",
+        "report.go",
+    ],
+    importpath = "golang.org/x/tools/internal/apidiff",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "apidiff_test",
+    srcs = ["apidiff_test.go"],
+    embed = [":apidiff"],
+    deps = ["//go/packages"],
+)
diff -urN a/internal/apidiff/testdata/BUILD.bazel b/internal/apidiff/testdata/BUILD.bazel
--- a/internal/apidiff/testdata/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/apidiff/testdata/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "testdata",
+    srcs = ["tests.go"],
+    importpath = "golang.org/x/tools/internal/apidiff/testdata",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/apidiff/testdata/exported_fields/BUILD.bazel b/internal/apidiff/testdata/exported_fields/BUILD.bazel
--- a/internal/apidiff/testdata/exported_fields/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/apidiff/testdata/exported_fields/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "exported_fields",
+    srcs = ["ef.go"],
+    importpath = "golang.org/x/tools/internal/apidiff/testdata/exported_fields",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/fastwalk/BUILD.bazel b/internal/fastwalk/BUILD.bazel
--- a/internal/fastwalk/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/fastwalk/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "fastwalk",
+    srcs = [
+        "fastwalk.go",
+        "fastwalk_dirent_fileno.go",
+        "fastwalk_dirent_ino.go",
+        "fastwalk_dirent_namlen_bsd.go",
+        "fastwalk_dirent_namlen_linux.go",
+        "fastwalk_portable.go",
+        "fastwalk_unix.go",
+    ],
+    importpath = "golang.org/x/tools/internal/fastwalk",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "fastwalk_test",
+    srcs = ["fastwalk_test.go"],
+    deps = [":fastwalk"],
+)
diff -urN a/internal/gopathwalk/BUILD.bazel b/internal/gopathwalk/BUILD.bazel
--- a/internal/gopathwalk/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/gopathwalk/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "gopathwalk",
+    srcs = ["walk.go"],
+    importpath = "golang.org/x/tools/internal/gopathwalk",
+    visibility = ["//:__subpackages__"],
+    deps = ["//internal/fastwalk"],
+)
+
+go_test(
+    name = "gopathwalk_test",
+    srcs = ["walk_test.go"],
+    embed = [":gopathwalk"],
+)
diff -urN a/internal/imports/BUILD.bazel b/internal/imports/BUILD.bazel
--- a/internal/imports/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/imports/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,38 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "imports",
+    srcs = [
+        "fix.go",
+        "imports.go",
+        "mod.go",
+        "sortimports.go",
+        "zstdlib.go",
+    ],
+    importpath = "golang.org/x/tools/internal/imports",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//go/ast/astutil",
+        "//go/packages",
+        "//internal/gopathwalk",
+        "//internal/module",
+    ],
+)
+
+go_test(
+    name = "imports_test",
+    srcs = [
+        "fix_test.go",
+        "mod_112_test.go",
+        "mod_test.go",
+        "proxy_112_test.go",
+        "proxy_113_test.go",
+    ],
+    data = glob(["testdata/**"]),
+    embed = [":imports"],
+    deps = [
+        "//go/packages/packagestest",
+        "//internal/module",
+        "//internal/txtar",
+    ],
+)
diff -urN a/internal/jsonrpc2/BUILD.bazel b/internal/jsonrpc2/BUILD.bazel
--- a/internal/jsonrpc2/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/jsonrpc2/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,19 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "jsonrpc2",
+    srcs = [
+        "jsonrpc2.go",
+        "log.go",
+        "stream.go",
+        "wire.go",
+    ],
+    importpath = "golang.org/x/tools/internal/jsonrpc2",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "jsonrpc2_test",
+    srcs = ["jsonrpc2_test.go"],
+    deps = [":jsonrpc2"],
+)
diff -urN a/internal/lsp/BUILD.bazel b/internal/lsp/BUILD.bazel
--- a/internal/lsp/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,49 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "lsp",
+    srcs = [
+        "code_action.go",
+        "completion.go",
+        "definition.go",
+        "diagnostics.go",
+        "format.go",
+        "general.go",
+        "highlight.go",
+        "hover.go",
+        "info.1.11.go",
+        "info.go",
+        "link.go",
+        "server.go",
+        "signature_help.go",
+        "symbols.go",
+        "text_synchronization.go",
+        "util.go",
+        "workspace.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//internal/jsonrpc2",
+        "//internal/lsp/protocol",
+        "//internal/lsp/source",
+        "//internal/lsp/xlog",
+        "//internal/span",
+    ],
+)
+
+go_test(
+    name = "lsp_test",
+    srcs = ["lsp_test.go"],
+    embed = [":lsp"],
+    deps = [
+        "//go/packages/packagestest",
+        "//internal/lsp/cache",
+        "//internal/lsp/diff",
+        "//internal/lsp/protocol",
+        "//internal/lsp/source",
+        "//internal/lsp/tests",
+        "//internal/lsp/xlog",
+        "//internal/span",
+    ],
+)
diff -urN a/internal/lsp/browser/BUILD.bazel b/internal/lsp/browser/BUILD.bazel
--- a/internal/lsp/browser/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/browser/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "browser",
+    srcs = ["browser.go"],
+    importpath = "golang.org/x/tools/internal/lsp/browser",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/cache/BUILD.bazel b/internal/lsp/cache/BUILD.bazel
--- a/internal/lsp/cache/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/cache/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,25 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "cache",
+    srcs = [
+        "cache.go",
+        "check.go",
+        "external.go",
+        "file.go",
+        "parse.go",
+        "pkg.go",
+        "session.go",
+        "view.go",
+        "watcher.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/cache",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//go/analysis",
+        "//go/packages",
+        "//internal/lsp/source",
+        "//internal/lsp/xlog",
+        "//internal/span",
+    ],
+)
diff -urN a/internal/lsp/cmd/BUILD.bazel b/internal/lsp/cmd/BUILD.bazel
--- a/internal/lsp/cmd/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/cmd/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,47 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "cmd",
+    srcs = [
+        "check.go",
+        "cmd.go",
+        "definition.go",
+        "format.go",
+        "info.go",
+        "query.go",
+        "serve.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/cmd",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//cmd/guru/serial",
+        "//internal/jsonrpc2",
+        "//internal/lsp",
+        "//internal/lsp/browser",
+        "//internal/lsp/cache",
+        "//internal/lsp/diff",
+        "//internal/lsp/protocol",
+        "//internal/lsp/source",
+        "//internal/span",
+        "//internal/tool",
+    ],
+)
+
+go_test(
+    name = "cmd_test",
+    srcs = [
+        "check_test.go",
+        "cmd_race_test.go",
+        "cmd_test.go",
+        "definition_test.go",
+        "export_test.go",
+        "format_test.go",
+    ],
+    embed = [":cmd"],
+    deps = [
+        "//go/packages/packagestest",
+        "//internal/lsp/tests",
+        "//internal/span",
+        "//internal/tool",
+    ],
+)
diff -urN a/internal/lsp/diff/BUILD.bazel b/internal/lsp/diff/BUILD.bazel
--- a/internal/lsp/diff/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/diff/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,17 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "diff",
+    srcs = [
+        "diff.go",
+        "unified.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/diff",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "diff_test",
+    srcs = ["diff_test.go"],
+    deps = [":diff"],
+)
diff -urN a/internal/lsp/protocol/BUILD.bazel b/internal/lsp/protocol/BUILD.bazel
--- a/internal/lsp/protocol/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/protocol/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,22 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "protocol",
+    srcs = [
+        "doc.go",
+        "enums.go",
+        "log.go",
+        "protocol.go",
+        "span.go",
+        "tsclient.go",
+        "tsprotocol.go",
+        "tsserver.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/protocol",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//internal/jsonrpc2",
+        "//internal/lsp/xlog",
+        "//internal/span",
+    ],
+)
diff -urN a/internal/lsp/snippet/BUILD.bazel b/internal/lsp/snippet/BUILD.bazel
--- a/internal/lsp/snippet/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/snippet/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "snippet",
+    srcs = ["snippet_builder.go"],
+    importpath = "golang.org/x/tools/internal/lsp/snippet",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "snippet_test",
+    srcs = ["snippet_builder_test.go"],
+    embed = [":snippet"],
+)
diff -urN a/internal/lsp/source/BUILD.bazel b/internal/lsp/source/BUILD.bazel
--- a/internal/lsp/source/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/source/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,73 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "source",
+    srcs = [
+        "analysis.go",
+        "completion.go",
+        "completion_format.go",
+        "completion_snippet.go",
+        "diagnostics.go",
+        "enums.go",
+        "format.go",
+        "highlight.go",
+        "hover.go",
+        "identifier.go",
+        "signature_help.go",
+        "symbols.go",
+        "util.go",
+        "view.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/source",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//go/analysis",
+        "//go/analysis/passes/asmdecl",
+        "//go/analysis/passes/assign",
+        "//go/analysis/passes/atomic",
+        "//go/analysis/passes/atomicalign",
+        "//go/analysis/passes/bools",
+        "//go/analysis/passes/buildtag",
+        "//go/analysis/passes/cgocall",
+        "//go/analysis/passes/composite",
+        "//go/analysis/passes/copylock",
+        "//go/analysis/passes/httpresponse",
+        "//go/analysis/passes/loopclosure",
+        "//go/analysis/passes/lostcancel",
+        "//go/analysis/passes/nilfunc",
+        "//go/analysis/passes/printf",
+        "//go/analysis/passes/shift",
+        "//go/analysis/passes/stdmethods",
+        "//go/analysis/passes/structtag",
+        "//go/analysis/passes/tests",
+        "//go/analysis/passes/unmarshal",
+        "//go/analysis/passes/unreachable",
+        "//go/analysis/passes/unsafeptr",
+        "//go/analysis/passes/unusedresult",
+        "//go/ast/astutil",
+        "//go/packages",
+        "//imports",
+        "//internal/lsp/diff",
+        "//internal/lsp/snippet",
+        "//internal/lsp/xlog",
+        "//internal/span",
+        "@org_golang_x_sync//errgroup:go_default_library",
+    ],
+)
+
+go_test(
+    name = "source_test",
+    srcs = [
+        "diagnostics_test.go",
+        "source_test.go",
+    ],
+    embed = [":source"],
+    deps = [
+        "//go/packages/packagestest",
+        "//internal/lsp/cache",
+        "//internal/lsp/diff",
+        "//internal/lsp/tests",
+        "//internal/lsp/xlog",
+        "//internal/span",
+    ],
+)
diff -urN a/internal/lsp/testdata/analyzer/BUILD.bazel b/internal/lsp/testdata/analyzer/BUILD.bazel
--- a/internal/lsp/testdata/analyzer/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/analyzer/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,6 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_test")
+
+go_test(
+    name = "analyzer_test",
+    srcs = ["bad_test.go"],
+)
diff -urN a/internal/lsp/testdata/bad/BUILD.bazel b/internal/lsp/testdata/bad/BUILD.bazel
--- a/internal/lsp/testdata/bad/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/bad/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "bad",
+    srcs = [
+        "bad0.go",
+        "bad1.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/bad",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/badstmt/BUILD.bazel b/internal/lsp/testdata/badstmt/BUILD.bazel
--- a/internal/lsp/testdata/badstmt/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/badstmt/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "badstmt",
+    srcs = ["badstmt.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/badstmt",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/basiclit/BUILD.bazel b/internal/lsp/testdata/basiclit/BUILD.bazel
--- a/internal/lsp/testdata/basiclit/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/basiclit/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "basiclit",
+    srcs = ["basiclit.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/basiclit",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/builtins/BUILD.bazel b/internal/lsp/testdata/builtins/BUILD.bazel
--- a/internal/lsp/testdata/builtins/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/builtins/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "builtins",
+    srcs = ["builtins.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/builtins",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/channel/BUILD.bazel b/internal/lsp/testdata/channel/BUILD.bazel
--- a/internal/lsp/testdata/channel/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/channel/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "channel",
+    srcs = ["channel.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/channel",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/comments/BUILD.bazel b/internal/lsp/testdata/comments/BUILD.bazel
--- a/internal/lsp/testdata/comments/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/comments/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "comments",
+    srcs = ["comments.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/comments",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/constant/BUILD.bazel b/internal/lsp/testdata/constant/BUILD.bazel
--- a/internal/lsp/testdata/constant/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/constant/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "constant",
+    srcs = ["constant.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/constant",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/errors/BUILD.bazel b/internal/lsp/testdata/errors/BUILD.bazel
--- a/internal/lsp/testdata/errors/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/errors/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "errors",
+    srcs = ["errors.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/errors",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/foo/BUILD.bazel b/internal/lsp/testdata/foo/BUILD.bazel
--- a/internal/lsp/testdata/foo/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/foo/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "foo",
+    srcs = ["foo.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/foo",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/format/BUILD.bazel b/internal/lsp/testdata/format/BUILD.bazel
--- a/internal/lsp/testdata/format/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/format/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "format",
+    srcs = ["good_format.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/format",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/godef/a/BUILD.bazel b/internal/lsp/testdata/godef/a/BUILD.bazel
--- a/internal/lsp/testdata/godef/a/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/godef/a/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "a",
+    srcs = [
+        "a.go",
+        "d.go",
+        "random.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/godef/a",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/godef/b/BUILD.bazel b/internal/lsp/testdata/godef/b/BUILD.bazel
--- a/internal/lsp/testdata/godef/b/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/godef/b/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "b",
+    srcs = [
+        "b.go",
+        "c.go",
+        "e.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/godef/b",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/good/BUILD.bazel b/internal/lsp/testdata/good/BUILD.bazel
--- a/internal/lsp/testdata/good/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/good/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,11 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "good",
+    srcs = [
+        "good0.go",
+        "good1.go",
+    ],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/good",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/highlights/BUILD.bazel b/internal/lsp/testdata/highlights/BUILD.bazel
--- a/internal/lsp/testdata/highlights/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/highlights/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "highlights",
+    srcs = ["highlights.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/highlights",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/importedcomplit/BUILD.bazel b/internal/lsp/testdata/importedcomplit/BUILD.bazel
--- a/internal/lsp/testdata/importedcomplit/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/importedcomplit/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "importedcomplit",
+    srcs = ["imported_complit.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/importedcomplit",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/index/BUILD.bazel b/internal/lsp/testdata/index/BUILD.bazel
--- a/internal/lsp/testdata/index/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/index/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "index",
+    srcs = ["index.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/index",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/links/BUILD.bazel b/internal/lsp/testdata/links/BUILD.bazel
--- a/internal/lsp/testdata/links/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/links/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "links",
+    srcs = ["links.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/links",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/nodisk/BUILD.bazel b/internal/lsp/testdata/nodisk/BUILD.bazel
--- a/internal/lsp/testdata/nodisk/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/nodisk/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "nodisk",
+    srcs = ["nodisk.overlay.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/nodisk",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/signature/BUILD.bazel b/internal/lsp/testdata/signature/BUILD.bazel
--- a/internal/lsp/testdata/signature/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/signature/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "signature",
+    srcs = ["signature.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/signature",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/snippets/BUILD.bazel b/internal/lsp/testdata/snippets/BUILD.bazel
--- a/internal/lsp/testdata/snippets/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/snippets/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "snippets",
+    srcs = ["snippets.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/snippets",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/symbols/BUILD.bazel b/internal/lsp/testdata/symbols/BUILD.bazel
--- a/internal/lsp/testdata/symbols/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/symbols/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
+
+go_library(
+    name = "symbols_lib",
+    srcs = ["main.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/symbols",
+    visibility = ["//visibility:private"],
+)
+
+go_binary(
+    name = "symbols",
+    embed = [":symbols_lib"],
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/testdata/testy/BUILD.bazel b/internal/lsp/testdata/testy/BUILD.bazel
--- a/internal/lsp/testdata/testy/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/testy/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "testy",
+    srcs = ["testy.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/testy",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "testy_test",
+    srcs = ["testy_test.go"],
+    embed = [":testy"],
+)
diff -urN a/internal/lsp/testdata/types/BUILD.bazel b/internal/lsp/testdata/types/BUILD.bazel
--- a/internal/lsp/testdata/types/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/testdata/types/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "types",
+    srcs = ["types.go"],
+    importpath = "golang.org/x/tools/internal/lsp/testdata/types",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/lsp/tests/BUILD.bazel b/internal/lsp/tests/BUILD.bazel
--- a/internal/lsp/tests/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/tests/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tests",
+    srcs = ["tests.go"],
+    importpath = "golang.org/x/tools/internal/lsp/tests",
+    visibility = ["//:__subpackages__"],
+    deps = [
+        "//go/packages",
+        "//go/packages/packagestest",
+        "//internal/lsp/source",
+        "//internal/span",
+        "//internal/txtar",
+    ],
+)
diff -urN a/internal/lsp/xlog/BUILD.bazel b/internal/lsp/xlog/BUILD.bazel
--- a/internal/lsp/xlog/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/lsp/xlog/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "xlog",
+    srcs = ["xlog.go"],
+    importpath = "golang.org/x/tools/internal/lsp/xlog",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/module/BUILD.bazel b/internal/module/BUILD.bazel
--- a/internal/module/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/module/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "module",
+    srcs = ["module.go"],
+    importpath = "golang.org/x/tools/internal/module",
+    visibility = ["//:__subpackages__"],
+    deps = ["//internal/semver"],
+)
+
+go_test(
+    name = "module_test",
+    srcs = ["module_test.go"],
+    embed = [":module"],
+)
diff -urN a/internal/semver/BUILD.bazel b/internal/semver/BUILD.bazel
--- a/internal/semver/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/semver/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "semver",
+    srcs = ["semver.go"],
+    importpath = "golang.org/x/tools/internal/semver",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "semver_test",
+    srcs = ["semver_test.go"],
+    embed = [":semver"],
+)
diff -urN a/internal/span/BUILD.bazel b/internal/span/BUILD.bazel
--- a/internal/span/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/span/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,27 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "span",
+    srcs = [
+        "parse.go",
+        "span.go",
+        "token.go",
+        "token111.go",
+        "token112.go",
+        "uri.go",
+        "utf16.go",
+    ],
+    importpath = "golang.org/x/tools/internal/span",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "span_test",
+    srcs = [
+        "span_test.go",
+        "token_test.go",
+        "uri_test.go",
+        "utf16_test.go",
+    ],
+    deps = [":span"],
+)
diff -urN a/internal/tool/BUILD.bazel b/internal/tool/BUILD.bazel
--- a/internal/tool/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/tool/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,8 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "tool",
+    srcs = ["tool.go"],
+    importpath = "golang.org/x/tools/internal/tool",
+    visibility = ["//:__subpackages__"],
+)
diff -urN a/internal/txtar/BUILD.bazel b/internal/txtar/BUILD.bazel
--- a/internal/txtar/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/internal/txtar/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,14 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "txtar",
+    srcs = ["archive.go"],
+    importpath = "golang.org/x/tools/internal/txtar",
+    visibility = ["//:__subpackages__"],
+)
+
+go_test(
+    name = "txtar_test",
+    srcs = ["archive_test.go"],
+    embed = [":txtar"],
+)
diff -urN a/playground/BUILD.bazel b/playground/BUILD.bazel
--- a/playground/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/playground/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,9 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "playground",
+    srcs = ["playground.go"],
+    importpath = "golang.org/x/tools/playground",
+    visibility = ["//visibility:public"],
+    deps = ["//godoc/golangorgenv"],
+)
diff -urN a/playground/socket/BUILD.bazel b/playground/socket/BUILD.bazel
--- a/playground/socket/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/playground/socket/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,15 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "socket",
+    srcs = ["socket.go"],
+    importpath = "golang.org/x/tools/playground/socket",
+    visibility = ["//visibility:public"],
+    deps = ["@org_golang_x_net//websocket:go_default_library"],
+)
+
+go_test(
+    name = "socket_test",
+    srcs = ["socket_test.go"],
+    embed = [":socket"],
+)
diff -urN a/present/BUILD.bazel b/present/BUILD.bazel
--- a/present/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/present/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,30 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "present",
+    srcs = [
+        "args.go",
+        "caption.go",
+        "code.go",
+        "doc.go",
+        "html.go",
+        "iframe.go",
+        "image.go",
+        "link.go",
+        "parse.go",
+        "style.go",
+        "video.go",
+    ],
+    importpath = "golang.org/x/tools/present",
+    visibility = ["//visibility:public"],
+)
+
+go_test(
+    name = "present_test",
+    srcs = [
+        "code_test.go",
+        "link_test.go",
+        "style_test.go",
+    ],
+    embed = [":present"],
+)
diff -urN a/refactor/eg/BUILD.bazel b/refactor/eg/BUILD.bazel
--- a/refactor/eg/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/refactor/eg/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,74 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "eg",
+    srcs = [
+        "eg.go",
+        "match.go",
+        "rewrite.go",
+    ],
+    importpath = "golang.org/x/tools/refactor/eg",
+    visibility = ["//visibility:public"],
+    deps = ["//go/ast/astutil"],
+)
+
+go_test(
+    name = "eg_test",
+    srcs = ["eg_test.go"],
+    data = glob(["testdata/**"]),
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            ":eg",
+            "//go/loader",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            ":eg",
+            "//go/loader",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/refactor/importgraph/BUILD.bazel b/refactor/importgraph/BUILD.bazel
--- a/refactor/importgraph/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/refactor/importgraph/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,69 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "importgraph",
+    srcs = ["graph.go"],
+    importpath = "golang.org/x/tools/refactor/importgraph",
+    visibility = ["//visibility:public"],
+    deps = ["//go/buildutil"],
+)
+
+go_test(
+    name = "importgraph_test",
+    srcs = ["graph_test.go"],
+    deps = select({
+        "@io_bazel_rules_go//go/platform:aix": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:darwin": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:dragonfly": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:freebsd": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:illumos": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:ios": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:js": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:linux": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:netbsd": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:openbsd": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:plan9": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:solaris": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "@io_bazel_rules_go//go/platform:windows": [
+            ":importgraph",
+            "//go/packages/packagestest",
+        ],
+        "//conditions:default": [],
+    }),
+)
diff -urN a/refactor/rename/BUILD.bazel b/refactor/rename/BUILD.bazel
--- a/refactor/rename/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/refactor/rename/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,32 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
+
+go_library(
+    name = "rename",
+    srcs = [
+        "check.go",
+        "mvpkg.go",
+        "rename.go",
+        "spec.go",
+        "util.go",
+    ],
+    importpath = "golang.org/x/tools/refactor/rename",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/ast/astutil",
+        "//go/buildutil",
+        "//go/loader",
+        "//go/types/typeutil",
+        "//refactor/importgraph",
+        "//refactor/satisfy",
+    ],
+)
+
+go_test(
+    name = "rename_test",
+    srcs = [
+        "mvpkg_test.go",
+        "rename_test.go",
+    ],
+    embed = [":rename"],
+    deps = ["//go/buildutil"],
+)
diff -urN a/refactor/satisfy/BUILD.bazel b/refactor/satisfy/BUILD.bazel
--- a/refactor/satisfy/BUILD.bazel	1970-01-01 01:00:00.000000000 +0100
+++ b/refactor/satisfy/BUILD.bazel	2021-04-01 19:27:08.000000000 +0200
@@ -0,0 +1,12 @@
+load("@io_bazel_rules_go//go:def.bzl", "go_library")
+
+go_library(
+    name = "satisfy",
+    srcs = ["find.go"],
+    importpath = "golang.org/x/tools/refactor/satisfy",
+    visibility = ["//visibility:public"],
+    deps = [
+        "//go/ast/astutil",
+        "//go/types/typeutil",
+    ],
+)
