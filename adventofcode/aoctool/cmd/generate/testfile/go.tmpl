package {{.Package}}

import (
	"testing"

	"google.golang.org/protobuf/proto"

	adventofcodepb "github.com/Saser/pdp/adventofcode/adventofcode_go_proto"
)

func unmarshal(tb testing.TB, b []byte) *adventofcodepb.Instance {
	tb.Helper()
	instance := &adventofcodepb.Instance{}
	if err := proto.Unmarshal(b, instance); err != nil {
		tb.Fatal(err)
	}
	return instance
}

func name(instance *adventofcodepb.Instance) string {
	return instance.GetName()
}

var part1Blobs = [][]byte{
	{{- range .Part1Blobs }}
	{{printf "%#v" .}},
	{{- end }}
}

{{if ne .Part1 "" -}}
func Test{{.Part1}}(t *testing.T) {
	for _, blob := range part1Blobs {
		instance := unmarshal(t, blob)
		t.Run(name(instance), func(t *testing.T) {
			got, err := {{.Part1}}(instance.GetInput())
			if err != nil {
				t.Fatalf("{{.Part1}}() err = %v; want nil", err)
			}
			want := instance.GetAnswer()
			if got != want {
				t.Errorf("{{.Part1}}() answer = %q; want %q", got, want)
			}
		})
	}
}

func Benchmark{{.Part1}}(b *testing.B) {
	for _, blob := range part1Blobs {
		instance := unmarshal(b, blob)
		b.Run(name(instance), func(b *testing.B) {
			for i := 0; i < b.N; i++ {
				got, err := {{.Part1}}(instance.GetInput())
				if err != nil {
					b.Fatalf("{{.Part1}}() err = %v; want nil", err)
				}
				want := instance.GetAnswer()
				if got != want {
					b.Errorf("{{.Part1}}() answer = %q; want %q", got, want)
				}
			}
		})
	}
}
{{- end}}

var part2Blobs = [][]byte{
	{{- range .Part2Blobs }}
	{{printf "%#v" .}},
	{{- end }}
}

{{if ne .Part2 "" -}}
func Test{{.Part2}}(t *testing.T) {
	for _, blob := range part2Blobs {
		instance := unmarshal(t, blob)
		t.Run(name(instance), func(t *testing.T) {
			got, err := {{.Part2}}(instance.GetInput())
			if err != nil {
				t.Fatalf("{{.Part2}}() err = %v; want nil", err)
			}
			want := instance.GetAnswer()
			if got != want {
				t.Errorf("{{.Part2}}() answer = %q; want %q", got, want)
			}
		})
	}
}

func Benchmark{{.Part2}}(b *testing.B) {
	for _, blob := range part2Blobs {
		instance := unmarshal(b, blob)
		b.Run(name(instance), func(b *testing.B) {
			for i := 0; i < b.N; i++ {
				got, err := {{.Part2}}(instance.GetInput())
				if err != nil {
					b.Fatalf("{{.Part2}}() err = %v; want nil", err)
				}
				want := instance.GetAnswer()
				if got != want {
					b.Errorf("{{.Part2}}() answer = %q; want %q", got, want)
				}
			}
		})
	}
}
{{- end}}
