syntax = "proto3";

package adventofcode;

option go_package = "github.com/Saser/pdp/adventofcode/adventofcode_go_proto;adventofcodepb";

// A service for solving Advent of Code problems.
service Solver {
  // Solve a single problem for a specific input.
  rpc Solve(SolveRequest) returns (SolveResponse);
}

// An identifier for a single problem.
message Problem {
  // Which year the problem is in. Must be a value in the range [2015, 2020].
  int32 year = 1;

  // Which day of the year the problem is in. Must be a value in the range [1, 25].
  int32 day = 2;

  // Which part of the problem this is. Must be either 1 or 2.
  int32 part = 3;
}

// A complete instance of a problem, consisting of an identifier for the problem, as well as an
// input and a corresponding answer.
message Instance {
  // Which problem this is an instance of.
  Problem problem = 1;

  // The input as it is given on the Advent of Code website.
  string input = 2;

  // The answer as it is given on the Advent of Code website.
  string answer = 3;
}

// Request message for the Solve RPC.
message SolveRequest {
  // Which problem to solve.
  Problem problem = 1;

  // What the input of the problem is.
  string input = 2;
}

// Response message for the Solve RPC.
message SolveResponse {
  // The answer as it should be entered on the Advent of Code website.
  string answer = 1;
}
